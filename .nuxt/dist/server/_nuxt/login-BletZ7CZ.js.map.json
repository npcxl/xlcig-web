{"file":"login-BletZ7CZ.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLkB,iBAAA;AACG,oBAAA;AAGK,gBAAA;AAG1B,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,qBAAqB,IAAI,KAAK;AACpC,UAAM,eAAe,IAAI,KAAK;AAC9B,UAAM,aAAa,IAAI,KAAK;AAG5B,UAAM,YAAY,SAAyB;AAAA,MACzC,OAAO;AAAA,MACP,UAAU;AAAA,IAAA,CACX;AAGD,UAAM,UAAU,IAAI;AAAA,MAClB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,IAAA,CACP;AAGD,UAAM,qBAAqB,MAAM;AAC/B,UAAI,QAAQ,MAAO,QAAO;AAC1B,UAAI,mBAAmB,MAAO,QAAO;AACrC,aAAO;AAAA,IACT;;;;;AA7MO,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,kGAA8F,MAAA,CAAA,CAAA,mBAAA;AAEvF,YAAAC,mBAAA,0BAAA,EAAA,MAAM,mBAAA,MAAA,GAAkB,MAAA,OAAA,CAAA;;AAazB,YAAAA,mBAAA,oBAAA,EAAA,MAAK,WAAO,MAAA,OAAA,CAAA;;QACX,IAAG;AAAA,QAAI,OAAM;AAAA,MAAA;yBAAvB,CAGW,GAAAC,QAAAC,UAAA,aAAA;;;;;cAFTC,YAA6C,KAAA,EAA1C,OAAM,iCAA+B;AAAA,cACxCA,YAA6C,QAAA,EAAvC,OAAM,sBAAA,GAAsB,MAAI;AAAA,YAAA;AAAA;;;;;;QAGhC,IAAG;AAAA,QAAiB,OAAM;AAAA,MAAA;yBAApC,CAEW,GAAAF,QAAAC,UAAA,aAAA;;;;;cADTC,YAAkD,QAAA,EAA5C,OAAM,sBAAA,GAAsB,WAAS;AAAA,YAAA;AAAA;;;;;AAUlC,YAAAH,mBAAA,oBAAA,EAAA,MAAK,YAAQ,MAAA,OAAA,CAAA;seAcLI,cAAA,SAAA,UAAU,KAAK,0SAKxB,EAAA,SAAA,sBAAA,oBAAA,mCAAA,CAAsF,saAc/E,aAAA,QAAY,SAAA,YADV,UAAU,UAAQ,IAAA,IAC1BA,cAAA,QAAM,aAAA,QAAY,SAAA,UAAA,4SAKnB,EAAA,SAAA,sBAAA,oBAAA,mCAAA,CAAsF,sUAO3E,aAAA,QAAY,oBAAA,aAAA,SAAA,CAAA,8OAQO,WAAA,KAAU,oBAAV,WAAA,OAAU,IAAA,IAAV,WAAA,KAAU,IAAA,aAAA;;QAE0G,WAAA;;UAMvI,WAAA,OAAU;;;;;AAWd,YAAA,gTAAAC,sBAAA,QAAA,SAAW,mBAAA,KAAkB,IAAA,cAAA,EAAA,gWAAA;AAE7B,UAAA,QAAA,SAAW,mBAAA,OAAkB;;;;;+BAErC,mBAAA,CAAkB,CAAA,4bAAA;;QAoBX,IAAG;AAAA,QAAiB,OAAM;AAAA,MAAA;yBAApC,CAEW,GAAAJ,QAAAC,UAAA,aAAA;;;;;8BAFwG,QAEnH;AAAA,YAAA;AAAA;;;;;AAkBC,UAAA,QAAA,MAAQ,MAAI;;;UACuG,QAAA,MAAQ,SAAI;8FAO3HI,eAAA,CAAA,QAAA,MAAQ,SAAI,YAAA,uBAAA,4BAAA,SAAA,CAAA,gDACdC,eAAA,QAAA,MAAQ,IAAI;;;;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderComponent","_push","_parent","_createVNode","_ssrRenderAttr","_ssrIncludeBooleanAttr","_ssrRenderClass","_ssrInterpolate"],"sources":["../../../../pages/auth/login.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-gray-900 via-slate-900 to-black relative overflow-hidden\">\r\n\r\n    <LoadingScreen :show=\"isPostLoginLoading\" />\r\n\r\n\r\n    <div class=\"fixed inset-0 pointer-events-none\">\r\n      <div class=\"absolute top-20 left-20 w-96 h-96 bg-gradient-to-r from-cyan-500/20 to-blue-500/20 rounded-full filter blur-3xl animate-pulse\"></div>\r\n      <div class=\"absolute bottom-20 right-20 w-80 h-80 bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-full filter blur-3xl animate-pulse delay-1000\"></div>\r\n      <div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[600px] h-[600px] bg-gradient-to-r from-indigo-500/10 to-cyan-500/10 rounded-full filter blur-3xl animate-spin-slow\"></div>\r\n    </div>\r\n\r\n \r\n    <nav class=\"relative z-10 w-full px-6 py-4\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"flex items-center space-x-4\">\r\n          <AppLogo size=\"small\" />\r\n          <NuxtLink to=\"/\" class=\"inline-flex items-center text-cyan-400 hover:text-cyan-300 transition-colors duration-200\">\r\n            <i class=\"bi bi-arrow-left mr-2 text-lg\"></i>\r\n            <span class=\"text-sm font-medium\">返回首页</span>\r\n          </NuxtLink>\r\n        </div>\r\n        <NuxtLink to=\"/auth/register\" class=\"text-cyan-400 hover:text-cyan-300 transition-colors duration-200\">\r\n          <span class=\"text-sm font-medium\">没有账号？立即注册</span>\r\n        </NuxtLink>\r\n      </div>\r\n    </nav>\r\n\r\n\r\n    <div class=\"relative z-10 flex items-center justify-center min-h-[calc(100vh-80px)] px-6\">\r\n      <div class=\"w-full max-w-md\">\r\n        <!-- Logo和标题 -->\r\n        <div class=\"text-center mb-8\">\r\n          <AppLogo size=\"medium\" />\r\n          <h1 class=\"text-3xl font-bold text-white mt-6 mb-2\">欢迎回来</h1>\r\n          <p class=\"text-gray-400\">登录您的账户，继续您的装机之旅</p>\r\n        </div>\r\n\r\n        <!-- 登录表单 -->\r\n        <div class=\"glass-card-dark rounded-2xl p-8 border border-cyan-500/30 shadow-2xl shadow-cyan-500/20\">\r\n          <form @submit.prevent=\"handleLogin\" class=\"space-y-6\">\r\n            <!-- 账号 -->\r\n            <div>\r\n              <label for=\"email\" class=\"block text-sm font-medium text-white mb-2\">账号</label>\r\n              <div class=\"relative\">\r\n                <input \r\n                  id=\"email\"\r\n                  v-model=\"loginForm.email\" \r\n                  type=\"text\" \r\n                  required\r\n                  placeholder=\"请输入邮箱/用户名/手机号\"\r\n                  class=\"w-full px-4 py-3 pl-12 bg-gray-800/70 border border-gray-600/50 rounded-lg text-white placeholder-gray-400 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500/20 transition-all duration-300 focus:bg-gray-800/90\"\r\n                  style=\"color: #ffffff !important; background-color: rgba(31, 41, 55, 0.8) !important;\"\r\n                >\r\n                <i class=\"bi bi-person absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 text-lg\"></i>\r\n              </div>\r\n              <p class=\"mt-2 text-xs text-gray-500\">支持邮箱、用户名或手机号登录</p>\r\n            </div>\r\n\r\n            <!-- 密码 -->\r\n            <div>\r\n              <label for=\"password\" class=\"block text-sm font-medium text-white mb-2\">密码</label>\r\n              <div class=\"relative\">\r\n                <input \r\n                  id=\"password\"\r\n                  v-model=\"loginForm.password\" \r\n                  :type=\"showPassword ? 'text' : 'password'\"\r\n                  required\r\n                  minlength=\"6\"\r\n                  placeholder=\"请输入您的密码\"\r\n                  class=\"w-full px-4 py-3 pl-12 pr-12 bg-gray-800/70 border border-gray-600/50 rounded-lg text-white placeholder-gray-400 focus:border-cyan-500 focus:ring-2 focus:ring-cyan-500/20 transition-all duration-300 focus:bg-gray-800/90\"\r\n                  style=\"color: #ffffff !important; background-color: rgba(31, 41, 55, 0.8) !important;\"\r\n                >\r\n                <i class=\"bi bi-lock absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 text-lg\"></i>\r\n                <button \r\n                  type=\"button\"\r\n                  @click=\"showPassword = !showPassword\"\r\n                  class=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-cyan-400 transition-colors duration-200\">\r\n                  <i :class=\"showPassword ? 'bi bi-eye-slash' : 'bi bi-eye'\" class=\"text-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 记住我和忘记密码 -->\r\n            <div class=\"flex items-center justify-between\">\r\n              <label class=\"flex items-center cursor-pointer group\">\r\n                <input type=\"checkbox\" v-model=\"rememberMe\" class=\"sr-only\">\r\n                <div class=\"relative\">\r\n                  <div :class=\"[\r\n                    'w-4 h-4 rounded border-2 transition-all duration-200 flex items-center justify-center',\r\n                    rememberMe \r\n                      ? 'bg-cyan-500 border-cyan-500 shadow-md shadow-cyan-500/30' \r\n                      : 'border-gray-500 group-hover:border-cyan-400 bg-transparent'\r\n                  ]\">\r\n                    <i v-if=\"rememberMe\" class=\"bi bi-check text-white text-xs leading-none\"></i>\r\n                  </div>\r\n                </div>\r\n                <span class=\"ml-3 text-sm text-gray-400 group-hover:text-gray-300 transition-colors duration-200 select-none\">记住我</span>\r\n              </label>\r\n              <a href=\"#\" class=\"text-sm text-cyan-400 hover:text-cyan-300 transition-colors duration-200\">忘记密码？</a>\r\n            </div>\r\n\r\n            <!-- 登录按钮 -->\r\n            <button \r\n              type=\"submit\"\r\n              :disabled=\"loading || isPostLoginLoading\"\r\n              class=\"w-full bg-gradient-to-r from-cyan-600 to-blue-600 hover:from-cyan-500 hover:to-blue-500 disabled:from-gray-600 disabled:to-gray-600 text-white py-3 px-6 rounded-lg font-medium transition-all duration-300 shadow-lg shadow-cyan-500/20 hover:shadow-cyan-500/40 disabled:cursor-not-allowed flex items-center justify-center gap-2\">\r\n              <div v-if=\"loading || isPostLoginLoading\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              <i v-else class=\"bi bi-box-arrow-in-right text-lg\"></i>\r\n              {{ getLoginButtonText() }}\r\n            </button>\r\n          </form>\r\n\r\n\r\n\r\n          <!-- 分割线 -->\r\n          <div class=\"relative my-6\">\r\n            <div class=\"absolute inset-0 flex items-center\">\r\n              <div class=\"w-full border-t border-gray-600\"></div>\r\n            </div>\r\n            <div class=\"relative flex justify-center text-sm\">\r\n              <span class=\"px-2 bg-gray-800 text-gray-400\">或者</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 注册链接 -->\r\n          <div class=\"text-center\">\r\n            <p class=\"text-gray-400 text-sm\">\r\n              还没有账号？\r\n              <NuxtLink to=\"/auth/register\" class=\"text-cyan-400 hover:text-cyan-300 font-medium transition-colors duration-200\">\r\n                立即注册\r\n              </NuxtLink>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 额外信息 -->\r\n        <div class=\"text-center mt-8\">\r\n          <p class=\"text-gray-500 text-xs\">\r\n            登录即表示您同意我们的\r\n            <a href=\"#\" class=\"text-cyan-400 hover:text-cyan-300\">服务条款</a>\r\n            和\r\n            <a href=\"#\" class=\"text-cyan-400 hover:text-cyan-300\">隐私政策</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 成功/错误提示 -->\r\n    <div v-if=\"message.show\" \r\n         :class=\"[\r\n           'fixed top-6 right-6 z-50 px-6 py-4 rounded-lg shadow-lg transition-all duration-300',\r\n           message.type === 'success' \r\n             ? 'bg-green-500/20 border border-green-500/30 text-green-300' \r\n             : 'bg-red-500/20 border border-red-500/30 text-red-300'\r\n         ]\">\r\n      <div class=\"flex items-center gap-3\">\r\n        <i :class=\"message.type === 'success' ? 'bi bi-check-circle' : 'bi bi-exclamation-circle'\" class=\"text-lg\"></i>\r\n        <span>{{ message.text }}</span>\r\n        <button @click=\"message.show = false\" class=\"ml-2 hover:opacity-75\">\r\n          <i class=\"bi bi-x text-lg\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive } from 'vue'\r\nimport { api } from '../../utils/api'\r\nimport type { UserLoginInput } from '../../utils/api'\r\nimport { useUserStore } from '../../stores/user'\r\nimport { useAddressStore } from '../../stores/address'\r\nimport { useLocation } from '../../composables/useLocation'\r\n\r\n// 使用Pinia stores\r\nconst userStore = useUserStore()\r\nconst addressStore = useAddressStore()\r\n\r\n// 使用IP定位功能\r\nconst { fetchLocation } = useLocation()\r\n\r\n// 响应式数据\r\nconst loading = ref(false)\r\nconst isPostLoginLoading = ref(false)\r\nconst showPassword = ref(false)\r\nconst rememberMe = ref(false)\r\n\r\n// 登录表单\r\nconst loginForm = reactive<UserLoginInput>({\r\n  email: '',\r\n  password: ''\r\n})\r\n\r\n// 消息提示\r\nconst message = ref({\r\n  show: false,\r\n  type: 'success' as 'success' | 'error',\r\n  text: ''\r\n})\r\n\r\n// 计算登录按钮文本\r\nconst getLoginButtonText = () => {\r\n  if (loading.value) return '登录中...'\r\n  if (isPostLoginLoading.value) return '正在初始化...'\r\n  return '立即登录'\r\n}\r\n\r\n// 显示消息提示\r\nconst showMessage = (type: 'success' | 'error', text: string) => {\r\n  message.value = { show: true, type, text }\r\n  setTimeout(() => {\r\n    message.value.show = false\r\n  }, 5000)\r\n}\r\n\r\n// 初始化用户数据\r\nconst initializeUserData = async () => {\r\n  const tasks = [\r\n    {\r\n      name: '初始化用户信息',\r\n      action: async () => {\r\n        // 用户信息已经在setAuth中设置，这里可以获取更多用户相关信息\r\n        // 如果需要额外的用户信息接口，可以在这里调用\r\n        await new Promise(resolve => setTimeout(resolve, 500)) // 模拟API调用\r\n      }\r\n    },\r\n    {\r\n      name: '初始化收货地址',\r\n      action: async () => {\r\n        try {\r\n          await addressStore.initializeAddresses()\r\n        } catch (error) {\r\n          console.error('初始化地址数据失败:', error)\r\n          // 地址初始化失败不影响登录流程\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: '获取位置信息',\r\n      action: async () => {\r\n        try {\r\n          // 获取用户当前位置信息\r\n          await fetchLocation(true)\r\n        } catch (error) {\r\n          console.error('获取位置信息失败:', error)\r\n          // 位置信息获取失败不影响登录流程\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: '同步用户配置',\r\n      action: async () => {\r\n        try {\r\n          // 这里可以添加同步用户配置的逻辑\r\n          // 例如：用户偏好设置、购物车数据等\r\n          await new Promise(resolve => setTimeout(resolve, 300)) // 模拟API调用\r\n        } catch (error) {\r\n          console.error('同步用户配置失败:', error)\r\n        }\r\n      }\r\n    }\r\n  ]\r\n\r\n  // 依次执行各个初始化任务\r\n  for (const task of tasks) {\r\n    await task.action()\r\n  }\r\n}\r\n\r\n// 处理登录\r\nconst handleLogin = async () => {\r\n  try {\r\n    loading.value = true\r\n    const response = await api.auth.login(loginForm)\r\n    \r\n    if (response.data) {\r\n      // 保存用户信息和token\r\n      userStore.setAuth(response.data.token, response.data.user)\r\n      \r\n      showMessage('success', '登录成功！正在初始化用户数据...')\r\n      \r\n      // 开始登录后的数据初始化\r\n      isPostLoginLoading.value = true\r\n      loading.value = false\r\n      \r\n      try {\r\n        await initializeUserData()\r\n        \r\n        // 所有初始化完成后跳转\r\n        await new Promise(resolve => setTimeout(resolve, 500)) // 短暂延迟\r\n        \r\n        // 跳转到首页\r\n        window.location.href = '/'\r\n        \r\n      } catch (error) {\r\n        console.error('用户数据初始化失败:', error)\r\n        isPostLoginLoading.value = false\r\n        showMessage('error', '数据初始化失败，但登录成功，正在跳转...')\r\n        \r\n        // 即使初始化失败也跳转，用户可以在需要时手动刷新\r\n        setTimeout(() => {\r\n          window.location.href = '/'\r\n        }, 2000)\r\n      }\r\n    }\r\n  } catch (error: any) {\r\n    console.error('登录失败:', error)\r\n    loading.value = false\r\n    isPostLoginLoading.value = false\r\n    showMessage('error', error.message || '登录失败，请检查账号和密码')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 玻璃卡片效果 */\r\n.glass-card-dark {\r\n  background: rgba(15, 23, 42, 0.8);\r\n  backdrop-filter: blur(20px);\r\n  border: 1px solid rgba(148, 163, 184, 0.1);\r\n}\r\n\r\n/* 自定义动画 */\r\n@keyframes spin-slow {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.animate-spin-slow {\r\n  animation: spin-slow 20s linear infinite;\r\n}\r\n\r\n/* 输入框聚焦效果 */\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n/* 复选框动画 */\r\ninput[type=\"checkbox\"] + div {\r\n  cursor: pointer;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 640px) {\r\n  .glass-card-dark {\r\n    margin: 1rem;\r\n    padding: 2rem;\r\n  }\r\n}\r\n</style> "],"version":3}