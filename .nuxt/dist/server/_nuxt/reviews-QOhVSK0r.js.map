{"version":3,"file":"reviews-QOhVSK0r.js","sources":["../../../../utils/api/reviews.ts"],"sourcesContent":["import { apiClient } from '../apiClient'\r\nimport type { ApiResponse } from '../../types/api'\r\n\r\n// 评论类型定义\r\nexport interface Review {\r\n  id: number\r\n  product_id: number\r\n  user_id?: number\r\n  author: string\r\n  rating: number\r\n  comment: string\r\n  images?: string[]\r\n  helpful_count: number\r\n  verified_purchase: boolean\r\n  is_anonymous?: boolean\r\n  status: 'pending' | 'approved' | 'rejected'\r\n  created_at: string\r\n  updated_at: string\r\n  // 扩展字段（用于用户评论列表）\r\n  product_name?: string\r\n  product_images?: string[]\r\n  user_info?: {\r\n    nickname: string\r\n    avatar?: string\r\n    email?: string\r\n    is_registered: boolean\r\n  }\r\n}\r\n\r\n// 评论统计类型\r\nexport interface ReviewStats {\r\n  product_id: number\r\n  total_reviews: number\r\n  average_rating: number\r\n  five_star_count: number\r\n  four_star_count: number\r\n  three_star_count: number\r\n  two_star_count: number\r\n  one_star_count: number\r\n  rating_distribution: {\r\n    rating: number\r\n    count: number\r\n    percentage: number\r\n  }[]\r\n}\r\n\r\n// 分页信息\r\nexport interface ReviewPagination {\r\n  current_page: number\r\n  per_page: number\r\n  total_items: number\r\n  total_pages: number\r\n}\r\n\r\n// 获取评论列表的响应类型\r\nexport interface ReviewListResponse {\r\n  reviews: Review[]\r\n  pagination: ReviewPagination\r\n}\r\n\r\n// 发布评论的数据类型\r\nexport interface CreateReviewData {\r\n  product_id: number\r\n  rating: number\r\n  comment: string\r\n  images?: string[]\r\n  author?: string\r\n  is_anonymous?: boolean\r\n}\r\n\r\n// 更新评论的数据类型\r\nexport interface UpdateReviewData {\r\n  rating?: number\r\n  comment?: string\r\n  images?: string[]\r\n}\r\n\r\n// 评论相关API\r\nexport const reviewsApi = {\r\n  // 获取产品评论列表\r\n  getProductReviews: (\r\n    productId: number, \r\n    params?: {\r\n      page?: number\r\n      limit?: number\r\n      rating?: number | 'all'\r\n      sort?: 'newest' | 'oldest' | 'rating_high' | 'rating_low' | 'helpful'\r\n    }\r\n  ): Promise<ApiResponse<ReviewListResponse>> => {\r\n    const searchParams = new URLSearchParams()\r\n    if (params?.page) searchParams.append('page', params.page.toString())\r\n    if (params?.limit) searchParams.append('limit', params.limit.toString())\r\n    if (params?.rating) searchParams.append('rating', params.rating.toString())\r\n    if (params?.sort) searchParams.append('sort', params.sort)\r\n    \r\n    const queryString = searchParams.toString()\r\n    return apiClient.get(`/reviews/product/${productId}${queryString ? '?' + queryString : ''}`)\r\n  },\r\n\r\n  // 获取产品评论统计\r\n  getProductReviewStats: (productId: number): Promise<ApiResponse<ReviewStats>> => \r\n    apiClient.get(`/reviews/stats/${productId}`),\r\n\r\n  // 发布评论\r\n  createReview: (data: CreateReviewData): Promise<ApiResponse<{ \r\n    review_id: number; \r\n    verified_purchase: boolean;\r\n    author_name: string;\r\n    is_anonymous: boolean;\r\n  }>> => \r\n    apiClient.post('/reviews', data),\r\n\r\n  // 获取用户的评论列表\r\n  getMyReviews: (params?: {\r\n    page?: number\r\n    limit?: number\r\n  }): Promise<ApiResponse<ReviewListResponse>> => {\r\n    const searchParams = new URLSearchParams()\r\n    if (params?.page) searchParams.append('page', params.page.toString())\r\n    if (params?.limit) searchParams.append('limit', params.limit.toString())\r\n    \r\n    const queryString = searchParams.toString()\r\n    return apiClient.get(`/reviews/my-reviews${queryString ? '?' + queryString : ''}`)\r\n  },\r\n\r\n  // 编辑评论\r\n  updateReview: (id: number, data: UpdateReviewData): Promise<ApiResponse<void>> => \r\n    apiClient.put(`/reviews/${id}`, data),\r\n\r\n  // 删除评论\r\n  deleteReview: (id: number): Promise<ApiResponse<void>> => \r\n    apiClient.delete(`/reviews/${id}`),\r\n\r\n  // 评论点赞/取消点赞\r\n  toggleReviewHelpful: (id: number, helpful: boolean): Promise<ApiResponse<void>> => \r\n    apiClient.post(`/reviews/${id}/helpful`, { helpful }),\r\n\r\n  // 获取最新评论（首页显示用）\r\n  getLatestReviews: (limit?: number): Promise<ApiResponse<Review[]>> => {\r\n    const searchParams = new URLSearchParams()\r\n    if (limit) searchParams.append('limit', limit.toString())\r\n    \r\n    const queryString = searchParams.toString()\r\n    return apiClient.get(`/reviews/latest${queryString ? '?' + queryString : ''}`)\r\n  },\r\n\r\n  // 检查用户是否已经评论过该产品\r\n  checkUserReview: (productId: number): Promise<ApiResponse<{ \r\n    has_reviewed: boolean; \r\n    review_id?: number;\r\n    review?: Review;\r\n  }>> => \r\n    apiClient.get(`/reviews/check/${productId}`)\r\n}\r\n\r\nexport default reviewsApi "],"names":[],"mappings":";AA8EO,MAAM,aAAa;AAAA;AAAA,EAExB,mBAAmB,CACjB,WACA,WAM6C;AAC7C,UAAM,eAAe,IAAI,gBAAA;AACzB,QAAI,iCAAQ,KAAM,cAAa,OAAO,QAAQ,OAAO,KAAK,UAAU;AACpE,QAAI,iCAAQ,MAAO,cAAa,OAAO,SAAS,OAAO,MAAM,UAAU;AACvE,QAAI,iCAAQ,OAAQ,cAAa,OAAO,UAAU,OAAO,OAAO,UAAU;AAC1E,QAAI,iCAAQ,KAAM,cAAa,OAAO,QAAQ,OAAO,IAAI;AAEzD,UAAM,cAAc,aAAa,SAAA;AACjC,WAAO,UAAU,IAAI,oBAAoB,SAAS,GAAG,cAAc,MAAM,cAAc,EAAE,EAAE;AAAA,EAC7F;AAAA;AAAA,EAGA,uBAAuB,CAAC,cACtB,UAAU,IAAI,kBAAkB,SAAS,EAAE;AAAA;AAAA,EAG7C,cAAc,CAAC,SAMb,UAAU,KAAK,YAAY,IAAI;AAAA;AAAA,EAGjC,cAAc,CAAC,WAGiC;AAC9C,UAAM,eAAe,IAAI,gBAAA;AACzB,QAAI,iCAAQ,KAAM,cAAa,OAAO,QAAQ,OAAO,KAAK,UAAU;AACpE,QAAI,iCAAQ,MAAO,cAAa,OAAO,SAAS,OAAO,MAAM,UAAU;AAEvE,UAAM,cAAc,aAAa,SAAA;AACjC,WAAO,UAAU,IAAI,sBAAsB,cAAc,MAAM,cAAc,EAAE,EAAE;AAAA,EACnF;AAAA;AAAA,EAGA,cAAc,CAAC,IAAY,SACzB,UAAU,IAAI,YAAY,EAAE,IAAI,IAAI;AAAA;AAAA,EAGtC,cAAc,CAAC,OACb,UAAU,OAAO,YAAY,EAAE,EAAE;AAAA;AAAA,EAGnC,qBAAqB,CAAC,IAAY,YAChC,UAAU,KAAK,YAAY,EAAE,YAAY,EAAE,QAAA,CAAS;AAAA;AAAA,EAGtD,kBAAkB,CAAC,UAAmD;AACpE,UAAM,eAAe,IAAI,gBAAA;AACzB,QAAI,MAAO,cAAa,OAAO,SAAS,MAAM,UAAU;AAExD,UAAM,cAAc,aAAa,SAAA;AACjC,WAAO,UAAU,IAAI,kBAAkB,cAAc,MAAM,cAAc,EAAE,EAAE;AAAA,EAC/E;AAAA;AAAA,EAGA,iBAAiB,CAAC,cAKhB,UAAU,IAAI,kBAAkB,SAAS,EAAE;AAC/C;"}