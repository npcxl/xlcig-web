import{I as i}from"./Cr1aFJzT.js";import{a as d}from"./oeYQgGxL.js";const o=i("address",{state:()=>({addresses:[],defaultAddress:null,isLoading:!1,isInitialized:!1,lastUpdated:null}),getters:{getDefaultAddress:s=>s.defaultAddress||s.addresses.find(e=>e.is_default)||null,getNonDefaultAddresses:s=>s.addresses.filter(e=>!e.is_default),addressCount:s=>s.addresses.length,hasAddresses:s=>s.addresses.length>0,getAddressById:s=>e=>s.addresses.find(t=>t.id===e)||null},actions:{async initializeAddresses(){if(!this.isInitialized)try{this.isLoading=!0,await this.fetchAddresses(),this.isInitialized=!0}catch(s){throw console.error("初始化地址数据失败:",s),s}finally{this.isLoading=!1}},async fetchAddresses(){try{this.isLoading=!0;const s=await d.getAddresses();s.success&&s.data&&(this.addresses=s.data,this.defaultAddress=s.data.find(e=>e.is_default)||null,this.lastUpdated=new Date)}catch(s){throw console.error("获取地址列表失败:",s),s}finally{this.isLoading=!1}},async addAddress(s){try{const e=await d.createAddress(s);if(e.success&&e.data)return this.addresses.push(e.data),e.data.is_default&&(this.addresses.forEach(t=>{t.id!==e.data.id&&(t.is_default=!1)}),this.defaultAddress=e.data),this.lastUpdated=new Date,e.data;throw new Error(e.message||"添加地址失败")}catch(e){throw console.error("添加地址失败:",e),e}},async updateAddress(s,e){try{const t=await d.updateAddress(s,e);if(t.success&&t.data){const a=this.addresses.findIndex(r=>r.id===s);return a!==-1&&(this.addresses[a]=t.data,t.data.is_default&&(this.addresses.forEach(r=>{r.id!==s&&(r.is_default=!1)}),this.defaultAddress=t.data)),this.lastUpdated=new Date,t.data}throw new Error(t.message||"更新地址失败")}catch(t){throw console.error("更新地址失败:",t),t}},async setDefaultAddress(s){try{const e=await d.setDefaultAddress(s);return e.success&&(this.addresses.forEach(t=>{t.is_default=t.id===s}),this.defaultAddress=this.addresses.find(t=>t.id===s)||null,this.lastUpdated=new Date),e.success}catch(e){throw console.error("设置默认地址失败:",e),e}},async deleteAddress(s){var e;try{const t=await d.deleteAddress(s);return t.success&&(this.addresses=this.addresses.filter(a=>a.id!==s),((e=this.defaultAddress)==null?void 0:e.id)===s&&(this.defaultAddress=null),this.lastUpdated=new Date),t.success}catch(t){throw console.error("删除地址失败:",t),t}},clearAddresses(){this.addresses=[],this.defaultAddress=null,this.isInitialized=!1,this.lastUpdated=null},async refreshAddresses(){this.isInitialized=!1,await this.initializeAddresses()}}});export{o as u};
