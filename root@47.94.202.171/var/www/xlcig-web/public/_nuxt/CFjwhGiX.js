const p=()=>typeof window<"u"?localStorage.getItem("authToken"):null,d=async(o,t)=>{const e={...t.headers};if(t.body instanceof FormData||(e["Content-Type"]="application/json"),t.requireAuth!==!1){const s=p();s&&(e.Authorization=`Bearer ${s}`)}const r={...t,headers:e,signal:AbortSignal.timeout(t.timeout||1e4)};return t.body&&t.method!=="GET"&&typeof t.body=="object"&&!(t.body instanceof FormData)&&(r.body=JSON.stringify(t.body)),r},m=async o=>{let t;try{const e=o.headers.get("content-type");e&&e.includes("application/json")?t=await o.json():t=await o.text()}catch{throw new Error("响应解析失败")}if(!o.ok){o.status===401&&typeof window<"u"&&(localStorage.removeItem("authToken"),localStorage.removeItem("userInfo"),window.location.pathname!=="/auth/login"&&(window.location.href="/auth/login"));const e=(t==null?void 0:t.message)||(t==null?void 0:t.error)||`HTTP ${o.status}: ${o.statusText}`;throw new Error(e)}return t},y=(o,t,e)=>{throw console.error(`API请求失败 [${t} ${e}]:`,o),o instanceof Error?o.name==="TimeoutError"?new Error("请求超时，请检查网络连接"):o.name==="TypeError"&&o.message.includes("fetch")?new Error("网络连接失败，请检查网络状态"):o:new Error("请求失败，请重试")},c={BASE_URL:"https://api.xlcig.cn/api",TIMEOUT:1e4};class w{constructor(){this.baseURL=c.BASE_URL,this.timeout=c.TIMEOUT}async request(t,e={}){const r=`${this.baseURL}${t.startsWith("/")?t:"/"+t}`,s=e.method||"GET";try{const a=await d(r,{timeout:this.timeout,...e}),i=await fetch(r,a);return await m(i)}catch(a){return y(a,s,t)}}async get(t,e){return this.request(t,{...e,method:"GET"})}async post(t,e,r){return this.request(t,{...r,method:"POST",body:e})}async put(t,e,r){return this.request(t,{...r,method:"PUT",body:e})}async delete(t,e){return this.request(t,{...e,method:"DELETE"})}async patch(t,e,r){return this.request(t,{...r,method:"PATCH",body:e})}async getWithParams(t,e,r){let s=t;if(e){const a=new URLSearchParams;Object.entries(e).forEach(([i,n])=>{n!=null&&n!==""&&(Array.isArray(n)?n.forEach(l=>a.append(i,String(l))):a.append(i,String(n)))}),a.toString()&&(s+=`?${a.toString()}`)}return this.get(s,r)}async upload(t,e,r){return this.request(t,{...r,method:"POST",body:e,headers:{...(r==null?void 0:r.headers)||{}}})}}const h=new w;class u{static async getIpLocation(){var t;try{const e=await h.get("/amap/ip/");if(e.success&&e.data){const r=e.data;console.log("🌍 IP定位信息:",{ip:r.ip,ipSource:r.ipSource,location:r.error?"定位失败":r.location?`${r.location.province||"未知"} ${r.location.city||""}`:"位置信息不可用",cached:r.cached,userUpdated:((t=r.user)==null?void 0:t.locationUpdated)||!1})}return e}catch(e){throw console.error("获取IP定位失败:",e),e}}static async refreshIpLocation(){try{const t=new Date().getTime(),e=await h.get(`/amap/ip/?t=${t}`);return console.log("🔄 强制刷新IP定位信息"),e}catch(t){throw console.error("刷新IP定位失败:",t),t}}}const f=u.getIpLocation,T=u.refreshIpLocation;export{u as L,h as a,p as b,d as c,m as d,y as e,f as g,T as r};
