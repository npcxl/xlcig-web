{"file":"index-yL8WFoul.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuSe,cAAA;AAGf,UAAM,OAAO,IAAI;AAAA,MACf;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,eAAe;AAAA,QACf,WAAW;AAAA,QACX,OAAO;AAAA,QACP,aAAa;AAAA,QACb,OAAO;AAAA,UACL,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QAAA;AAAA,QAET,UAAU,CAAC,UAAU,QAAQ,SAAS,MAAM;AAAA,MAAA;AAAA,MAE9C;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,eAAe;AAAA,QACf,WAAW;AAAA,QACX,OAAO;AAAA,QACP,aAAa;AAAA,QACb,OAAO;AAAA,UACL,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QAAA;AAAA,QAET,UAAU,CAAC,UAAU,aAAa,QAAQ,MAAM;AAAA,MAAA;AAAA,MAElD;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,eAAe;AAAA,QACf,WAAW;AAAA,QACX,OAAO;AAAA,QACP,aAAa;AAAA,QACb,OAAO;AAAA,UACL,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QAAA;AAAA,QAET,UAAU,CAAC,UAAU,WAAW,QAAQ,MAAM;AAAA,MAAA;AAAA,MAEhD;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,eAAe;AAAA,QACf,WAAW;AAAA,QACX,OAAO;AAAA,QACP,aAAa;AAAA,QACb,OAAO;AAAA,UACL,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QAAA;AAAA,QAET,UAAU,CAAC,UAAU,YAAY,OAAO,MAAM;AAAA,MAAA;AAAA,MAEhD;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,eAAe;AAAA,QACf,WAAW;AAAA,QACX,OAAO;AAAA,QACP,aAAa;AAAA,QACb,OAAO;AAAA,UACL,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QAAA;AAAA,QAET,UAAU,CAAC,UAAU,WAAW,QAAQ,MAAM;AAAA,MAAA;AAAA,IAChD,CACD;AAED,UAAM,eAAe,IAAI,CAAC;AAC1B,UAAM,WAAW,IAAI,CAAC;AACtB,UAAM,aAAa,IAAI,IAAI;AAC3B,UAAM,YAAY,IAAI,KAAK;AACH,QAAI,oBAAI,IAAA,CAAK;AAGrC,UAAM,cAAc,SAAS,MAAM,KAAK,MAAM,aAAa,KAAK,CAAC;AAgBjE,UAAM,YAAY,CAACA,WAAU;AAC3B,UAAIA,WAAU,aAAa,MAAO;AAElC,mBAAa,QAAQA;AACrB,eAAS,QAAQ,CAACA,UAAS,MAAM,KAAK,MAAM;AAG5C,mBAAc,SAAS;AACrB,QAAA,SAAU,QAAQ,EAAE;AAAA,MAAA;AAItB,iBAAW,QAAQ;AACnB,iBAAW,MAAM;AACf,YAAI,CAAC,UAAU,OAAO;AACpB,qBAAW,QAAQ;AAAA,QAAA;AAAA,MACrB,GACC,GAAI;AAAA,IAAA;AAIT,UAAM,UAAU,MAAM;AACpB,YAAM,aAAa,aAAa,QAAQ,KAAK,KAAK,MAAM;AACxD,gBAAU,SAAS;AAAA,IAAA;AAIrB,UAAM,UAAU,MAAM;AACpB,YAAM,YAAY,aAAa,UAAU,IAAI,KAAK,MAAM,SAAS,IAAI,aAAa,QAAQ;AAC1F,gBAAU,SAAS;AAAA,IAAA;AAyCD,QAAI,CAAC;AACP,QAAI,CAAC;AA2DA,QAAI,IAAI;AACb,QAAI,KAAK;AA2E3B,aAAa;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc,SAAS,YAAY;AAAA,MACnC,aAAa,SAAS,WAAW;AAAA,IAAA,CAClC;;AAjnBM,YAAA,OAAAC,eAAAC,WAAA,EAAA,OAAM,8BAA0B,MAAA,CAAA,CAAA,wEAAA;AAGhBC,oBAAA,KAAL,MAAC;;UAAmE,WAAA,GAAA,KAAK,OAAA,IAAM,CAAA;AAAA,UAAwC,cAAA,GAAA,IAAA,KAAK,OAAA,IAAM,CAAA;AAAA,UAA6B,OAAA,GAAA,KAAK,OAAA,IAAM,GAAA;AAAA,UAA+B,OAAA,GAAA,KAAK,OAAA,IAAM,GAAA;AAAA,UAAsC,UAAA,GAAA,IAAA,KAAK,OAAA,IAAM,CAAA;AAAA,QAAA;;mkCA0ClNC,MAAA,QAAA,CAAQ,OAAA,CAAA,CAAA,4BAAA;oBAE5CA,MAAA,IAAA,GAAI,CAAnB,KAAKJ,WAAK;6BAGEK,eAAA,CAAA,EAAA,UAAAL,WAAUI,MAAA,YAAA,EAAA,GAAY,kBAAA,CAAA;gCACGJ,UAAK,MAAUI,MAAA,IAAA,EAAK,OAAM;AAAA,wBAAqDJ,SAAK,GAAA;AAAA,2BAAwCA,UAAK,MAAUI,MAAA,IAAA,EAAK,OAAM;AAAA,QAAA,iCAQlM,cAAU,OAAS,IAAI,KAAK,EAAA;AAOhB,YAAA,IAAI,OAAK;sFACZ,OAAK,IAAI,KAAK,kBACd,OAAK,IAAI,KAAK;;AAMY,gBAAA,2IAAAE,eAAA,IAAI,KAAK,CAAA,eAAA;AAAA,QAAA;iMAQYD,eAAA,CAAA,EAAA,YAAAL,WAAUI,MAAA,YAAA,EAAA,GAAY,qBAAA,CAAA,4HAIxCE,eAAA,IAAI,KAAK,wDACVA,eAAA,IAAI,KAAK,gLAI9BA,eAAA,IAAI,MAAM,iEAEcA,eAAA,IAAI,WAAW;AAMxC,YAAA,IAAI,gBAAa,GAAA;AAA0C,gBAAA,0DAAAA,eAAA,IAAI,aAAa,CAAA,SAAA;AAAA,QAAA;;;mEACnDA,eAAA,IAAI,YAAS,IAAA,IAAW,IAAI,SAAS,KAAA,IAAA,4DAIhCC,eAAAP,WAAUI,MAAA,YAAA,IAAY,OAAA,EAAA,SAAA,QAAA;AAY5BD,sBAAA,IAAL,MAAC;8EAAoC,EAAA,CAAC,CAAA,0BAAA;AAAA,QAAA;;;;oBAqBlDC,MAAA,IAAA,GAAI,CAAnB,KAAKJ,WAAK;gCAMEK,eAAA,CAAA,EAAA,UAAAL,WAAUI,MAAA,YAAA,EAAA,GAAY,oBAAA,CAAA,8BAEzC,iBAAeJ,WAAUI,MAAA,YAAA,CAAY,kBACrC,cAAU,SAAW,IAAI,KAAK,EAAA,kBAC9B,YAAUJ,WAAUI,MAAA,YAAA,IAAY,IAAA,EAAA,qLAGWE,eAAA,IAAI,KAAK;;;AAsBtC,UAAAF,MAAA,WAAA,EAAY,OAAK;uFACpB,OAAKA,MAAA,WAAA,EAAY,KAAK,kBACtB,OAAG,GAAKA,MAAA,WAAA,EAAY,KAAK,OAAA;;iKAOEE,eAAAF,MAAA,WAAA,EAAY,KAAK,0DAChBE,eAAAF,MAAA,WAAA,EAAY,KAAK;;sjBAoBgBE,eAAAF,MAAA,WAAA,EAAY,KAAK,wFAE/BE,eAAAF,MAAA,WAAA,EAAY,WAAW,sRAKvCE,eAAAF,MAAA,WAAA,EAAY,KAAK,uMAInBE,eAAAF,MAAA,WAAA,EAAY,MAAM,sMAIhBE,eAAAF,MAAA,WAAA,EAAY,WAAW,6QAShCA,MAAA,WAAA,EAAY,MAAM,MAAM,6NAKxBA,MAAA,WAAA,EAAY,MAAM,KAAK,oOAKvBA,MAAA,WAAA,EAAY,MAAM,KAAK,+NAKvBA,MAAA,WAAA,EAAY,MAAM,KAAK;oBAW3BA,MAAA,WAAA,EAAY,UAAQ,CAA/B,YAAO;iJAGf,OAAO,CAAA,SAAA;AAAA,MAAA;;AAOA,UAAAA,MAAA,WAAA,EAAY,gBAAa,GAAA;uHAEXA,MAAA,WAAA,EAAY,cAAc,eAAA,CAAc,CAAA,SAAA;AAAA,MAAA;;;gIAEtCA,MAAA,WAAA,EAAY,UAAU,eAAA,CAAc,CAAA,SAAA;AACpD,UAAAA,MAAA,WAAA,EAAY,gBAAa,KAAQA,MAAA,WAAA,EAAY,YAAS,GAAA;2HAG5D,KAAK,OAAK,IAAMA,MAAA,WAAA,EAAY,YAAYA,MAAA,WAAA,EAAY,iBAAa,GAAA,CAAA,CAAA,WAAA;AAAA,MAAA;;;;;;;;;;;;;;;;;;ACsDrF,UAAM,WAAW,IAAI,EAAE;AACvB,UAAM,aAAa,IAAI,EAAE;AACzB,UAAM,SAAS,IAAI,EAAE;AACrB,UAAM,UAAU,IAAI,IAAI;AACxB,UAAM,OAAO,IAAI,EAAE,OAAO,GAAG,MAAM,GAAG,OAAO,IAAI,YAAY,EAAA,CAAG;AAGhE,UAAM,mBAAmB,IAAI,KAAK;AAClC,UAAM,gBAAgB,IAAI,KAAK;AAC/B,UAAM,aAAa,IAAI,EAAE;AACzB,UAAM,SAAS,IAAI,EAAE;AACrB,UAAM,aAAa,IAAI,EAAE;AAiLzB,UAAM,kBAAkB,CAAC,eAAe;AACtC,YAAM,WAAW,WAAW,MAAM,KAAK,CAAA,QAAO,IAAI,OAAO,UAAU;AACnE,cAAO,qCAAU,SAAQ;AAAA,IAAA;AAI3B,UAAM,eAAe,CAAC,YAAY;AAChC,YAAM,QAAQ,QAAQ,SAAS,CAAA;AAC/B,aAAO,OAAO,QAAQ,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;AACrE,YAAI,GAAG,IAAI;AACX,eAAO;AAAA,MAAA,GACN,EAAE;AAAA,IAAA;AAIT,UAAM,mBAAmB,CAAC,QAAQ;AAChC,YAAM,eAAe;AAAA,QACnB,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,QACP,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,MAAM;AAAA,QACN,YAAY;AAAA,MAAA;AAEd,aAAO,aAAa,GAAG,KAAK;AAAA,IAAA;AAI9B,UAAM,mBAAmB,CAAC,YAAY;AACpC,YAAM,eAAe;AAAA,QACnB,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,WAAW;AAAA,QACX,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,UAAU;AAAA,QACV,OAAO;AAAA,QACP,UAAU;AAAA,QACV,SAAS;AAAA,QACT,SAAS;AAAA,MAAA;AAEX,aAAO,aAAa,OAAO,KAAK;AAAA,IAAA;AAIlC,UAAM,iBAAiB,CAAC,aAAa;AACnC,YAAM,QAAQ;AAAA,QACZ,UAAU;AAAA,QACV,KAAK;AAAA,QACL,aAAa;AAAA,QACb,OAAO;AAAA,QACP,SAAS;AAAA,MAAA;AAEX,aAAO,MAAM,QAAQ,KAAK;AAAA,IAAA;AAI5B,UAAM,yBAAyB,CAAC,aAAa;AAC3C,YAAM,QAAQ;AAAA,QACZ,UAAU;AAAA,QACV,KAAK;AAAA,QACL,aAAa;AAAA,QACb,OAAO;AAAA,QACP,SAAS;AAAA,MAAA;AAEX,aAAO,MAAM,QAAQ,KAAK;AAAA,IAAA;AAI1B,UAAM,aAAa,CAAC,eAAe;AACjC,YAAM,OAAO,IAAI,KAAK,UAAU;AAChC,aAAO,KAAK,mBAAmB,SAAS,EAAE,MAAM,WAAW,OAAO,WAAW,KAAK,WAAW;AAAA,IAAA;AAyC/F,YAAQ;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,QACJ,EAAE,MAAM,eAAe,SAAS,6BAAA;AAAA,MAA6B;AAAA,IAC/D,CACD;;;;;AA3nBI,YAAA,OAAAH,eAAAC,WAAA,EAAA,OAAM,2BAAuB,MAAA,CAAA,CAAA,4kCAAA;;QAiBX,MAAK;AAAA,QAAU,oBAAkB;AAAA,MAAA;;;QAEhC,IAAG;AAAA,QAAI,OAAM;AAAA,MAAA;yBAAvB,CAGW,GAAAM,QAAAC,UAAA,aAAA;;;;;cAFTC,YAA6C,KAAA,EAA1C,OAAM,iCAA+B;AAAA,cACxCA,YAA2C,QAAA,EAArC,OAAM,sBAAA,GAAsB,IAAE;AAAA,YAAA;AAAA;;;;;;;AA+CtBP,oBAAAC,MAAA,UAAA,IAAP,QAAG;;;UAG0HA,MAAA,gBAAA,MAAqB,IAAI;yCAMlJC,eAAA,CAAA,IAAI,MAAI,cAAA,CAAA,gDACVC,eAAA,IAAI,IAAI,kEACyBA,eAAA,IAAI,KAAK;;yhBAapCF,MAAA,aAAA,CAAa,oBAAbA,MAAA,aAAA,GAAa,KAAA,kBAAbA,MAAA,aAAA,GAAa,KAAA,CAAA,IAAA,cAAA,EAAA,wBAAA;AAGJD,oBAAAC,MAAA,MAAA,IAAT,UAAK;sCAA6B,SAAO,MAAM,EAAE,wDAHjDA,MAAA,aAAA,CAAa,oBAAbA,MAAA,aAAA,GAGyC,MAAM,EAAE,kBAHjDA,MAAA,aAAA,GAGyC,MAAM,EAAE,CAAA,IAAA,cAAA,MAC3DE,eAAA,MAAM,IAAI,MAAQA,eAAA,MAAM,KAAK;;+dAWnBF,MAAA,UAAA,CAAU,oBAAVA,MAAA,UAAA,GAAU,EAAA,kBAAVA,MAAA,UAAA,GAAU,EAAA,CAAA,IAAA,cAAA,6FAAVA,MAAA,UAAA,CAAU,oBAAVA,MAAA,UAAA,GAAU,QAAA,kBAAVA,MAAA,UAAA,GAAU,QAAA,CAAA,IAAA,cAAA,mGAAVA,MAAA,UAAA,CAAU,oBAAVA,MAAA,UAAA,GAAU,WAAA,kBAAVA,MAAA,UAAA,GAAU,WAAA,CAAA,IAAA,cAAA,uGAAVA,MAAA,UAAA,CAAU,oBAAVA,MAAA,UAAA,GAAU,YAAA,kBAAVA,MAAA,UAAA,GAAU,YAAA,CAAA,IAAA,cAAA,yGAAVA,MAAA,UAAA,CAAU,oBAAVA,MAAA,UAAA,GAAU,aAAA,kBAAVA,MAAA,UAAA,GAAU,aAAA,CAAA,IAAA,cAAA,0GAAVA,MAAA,UAAA,CAAU,oBAAVA,MAAA,UAAA,GAAU,aAAA,kBAAVA,MAAA,UAAA,GAAU,aAAA,CAAA,IAAA,cAAA,udAiBVA,MAAA,MAAA,CAAM,oBAANA,MAAA,MAAA,GAAM,EAAA,kBAANA,MAAA,MAAA,GAAM,EAAA,CAAA,IAAA,cAAA,8FAANA,MAAA,MAAA,CAAM,oBAANA,MAAA,MAAA,GAAM,WAAA,kBAANA,MAAA,MAAA,GAAM,WAAA,CAAA,IAAA,cAAA,oGAANA,MAAA,MAAA,CAAM,oBAANA,MAAA,MAAA,GAAM,YAAA,kBAANA,MAAA,MAAA,GAAM,YAAA,CAAA,IAAA,cAAA,gGAANA,MAAA,MAAA,CAAM,oBAANA,MAAA,MAAA,GAAM,QAAA,kBAANA,MAAA,MAAA,GAAM,QAAA,CAAA,IAAA,cAAA,6FAANA,MAAA,MAAA,CAAM,oBAANA,MAAA,MAAA,GAAM,QAAA,kBAANA,MAAA,MAAA,GAAM,QAAA,CAAA,IAAA,cAAA,8FAANA,MAAA,MAAA,CAAM,oBAANA,MAAA,MAAA,GAAM,SAAA,kBAANA,MAAA,MAAA,GAAM,SAAA,CAAA,IAAA,cAAA,kQAkBZA,MAAA,UAAA,CAAU,o6BAyB4BE,eAAA,gBAAgBF,MAAA,gBAAA,CAAgB,CAAA,sGACHE,eAAAF,MAAA,IAAA,EAAK,KAAK,6EAGpFE,eAAAF,MAAA,IAAA,EAAK,KAAK;WAMVA,MAAA,OAAA,GAAO;;AACQD,sBAAAC,MAAA,QAAA,IAAX,YAAO;;AAKJ,cAAA,QAAQ,OAAK;iGAChB,OAAK,QAAQ,KAAK,kBAAG,OAAK,QAAQ,IAAI;;0GAKjC,eAAe,QAAQ,QAAQ,CAAA,mGACG,uBAAuB,QAAQ,QAAQ,CAAA;;cAI3E,QAAQ,iBAAiB,QAAQ,gBAAgB,QAAQ,OAAK;2LAEnE,KAAK,OAAK,IAAM,QAAQ,QAAQ,QAAQ,iBAAa,GAAA,CAAA,CAAA,UAAA;AAAA,UAAA;;;;AAK5C,cAAA,CAAA,QAAQ,SAAO;;qBAIX,QAAQ,cAAU,GAAA;AAEmB,kBAAA,6NAAAE,eAAA,QAAQ,UAAU,CAAA,SAAA;AAAA,UAAA;;;uTAejEA,eAAA,QAAQ,KAAK,0KAGsHA,eAAA,QAAQ,IAAI,uFACvFA,eAAA,QAAQ,WAAW;AAMnEH,wBAAA,IAAL,MAAC;+CACA,KAAK,QAAQ,SAAM,oBAAA,iBAAA,yBAAA,CAAA,CAAA,wBAAA;AAAA,UAAA;iGAGmBG,eAAA,QAAQ,MAAM,gEACzBA,eAAA,QAAQ,WAAW;AAK7BH,wBAAA,aAAa,OAAO,GAAA,CAAnC,OAAO,QAAG;qMAEoBG,eAAA,iBAAiB,GAAG,CAAA,oFAClB,KAAK;;;AAM1BH,wBAAA,QAAQ,SAAS,cAA5B,YAAO;AAEjB,kBAAA,mJAAAG,eAAA,iBAAiB,OAAO,CAAA,CAAA,SAAA;AAAA,UAAA;oQASjB,QAAQ,MAAM,eAAA,CAAc,CAAA,QAAA;cAEvB,QAAQ,iBAAiB,QAAQ,gBAAgB,QAAQ,OAAK;2GAE9D,QAAQ,cAAc,eAAA,CAAc,CAAA,QAAA;AAAA,UAAA;;;0JAKvC,WAAW,QAAQ,WAAW,CAAA,CAAA,ulBAAA;AAAA,QAAA;;;;;UAoBvCF,MAAA,OAAA,GAAO;;;;;WASNA,MAAA,OAAA,KAAWA,MAAA,QAAA,EAAS,WAAM,GAAA;;;;;;;;;;;;;;;;","names":["index","_ssrRenderAttrs","_mergeProps","_ssrRenderList","_unref","_ssrRenderClass","_ssrInterpolate","_ssrRenderStyle","_push","_parent","_createVNode"],"sources":["../../../../components/SteamCarousel.vue","../../../../pages/products/index.vue"],"sourcesContent":["<template>\n  <div class=\"steam-carousel-container\">\n    <!-- 粒子背景系统 -->\n    <div class=\"particle-system\">\n      <div v-for=\"i in 50\" :key=\"i\" class=\"particle\" :style=\"{ \n        '--delay': `${Math.random() * 5}s`,\n        '--duration': `${3 + Math.random() * 4}s`,\n        '--x': `${Math.random() * 100}%`,\n        '--y': `${Math.random() * 100}%`,\n        '--size': `${2 + Math.random() * 3}px`\n      }\"></div>\n    </div>\n\n    <!-- 增强背景装饰 -->\n    <div class=\"carousel-background\">\n      <div class=\"bg-pattern\"></div>\n      <div class=\"bg-glow-1\"></div>\n      <div class=\"bg-glow-2\"></div>\n      <div class=\"bg-glow-3\"></div>\n      <div class=\"light-sweep\"></div>\n      <div class=\"energy-field\"></div>\n    </div>\n    \n    <div class=\"text-center mb-16\">\n      <h3 class=\"text-5xl font-bold text-white mb-6 flex items-center justify-center gap-4\">\n        <i class=\"bi bi-gpu-card text-cyan-400 shadow-lg shadow-cyan-400/50 text-6xl pulse-icon\"></i>\n        RTX 50系列显卡\n      </h3>\n      <p class=\"text-gray-300 text-xl\">下一代AI游戏的革命性体验</p>\n      <div class=\"title-underline\"></div>\n    </div>\n    \n    <!-- 增强的3D轮播容器 -->\n    <div class=\"carousel-3d-scene\" \n         ref=\"observerTarget\"\n         @mouseenter=\"handleMouseEnter\"\n         @mouseleave=\"handleMouseLeave\"\n         @touchstart=\"handleTouchStart\"\n         @touchend=\"handleTouchEnd\"\n         @wheel.passive=\"handleWheel\">\n      <div class=\"carousel-environment\">\n        <div class=\"env-ring ring-1\"></div>\n        <div class=\"env-ring ring-2\"></div>\n        <div class=\"env-ring ring-3\"></div>\n      </div>\n      \n      <div class=\"carousel-3d-stage\" :style=\"{ transform: `rotateY(${rotation}deg)` }\">\n        <div \n          v-for=\"(gpu, index) in gpus\" \n          :key=\"gpu.id\"\n          class=\"carousel-3d-item\"\n          :class=\"{ 'active': index === currentIndex }\"\n          :style=\"{ \n            transform: `rotateY(${index * (360 / gpus.length)}deg) translateZ(500px)`,\n            '--delay': `${index * 0.1}s`,\n            '--rotation': `${index * (360 / gpus.length)}deg`\n          }\"\n          @click=\"selectGpu(index)\"\n          @keydown.enter=\"selectGpu(index)\"\n          tabindex=\"0\"\n          :aria-label=\"`显卡: ${gpu.title}`\">\n          \n          <!-- 增强的游戏封面 -->\n          <div class=\"game-cover glass-morphism-enhanced\">\n            <div class=\"hologram-effect\"></div>\n            \n            <!-- 显卡图片或图标placeholder -->\n            <div v-if=\"gpu.image\" class=\"gpu-image-container\">\n              <img :src=\"gpu.image\" \n                   :alt=\"gpu.title\" \n                   loading=\"lazy\"\n                   @error=\"$event.target.style.display = 'none'\" />\n            </div>\n            <div v-else class=\"gpu-placeholder\">\n              <i class=\"bi bi-gpu-card\"></i>\n              <span class=\"gpu-model-name\">{{ gpu.title }}</span>\n            </div>\n            \n            <div class=\"game-glow\"></div>\n            <div class=\"glass-overlay-advanced\"></div>\n            <div class=\"glass-reflection-advanced\"></div>\n            \n            <!-- 增强的光效扫描 -->\n            <div class=\"light-scan-advanced\" :class=\"{ 'scanning': index === currentIndex }\"></div>\n            \n            <!-- 悬浮信息 - 重新设计 -->\n            <div class=\"game-info-advanced\">\n              <h4 class=\"game-title-advanced\">{{ gpu.title }}</h4>\n              <p class=\"game-genre-advanced\">{{ gpu.model }}</p>\n              <div class=\"game-stats-advanced\">\n                <div class=\"game-rating-advanced\">\n                  <i class=\"bi bi-star-fill\"></i>\n                  <span>{{ gpu.rating }}</span>\n                </div>\n                <div class=\"game-year-advanced\">{{ gpu.releaseYear }}</div>\n              </div>\n            </div>\n            \n            <!-- 重新设计的价格显示 -->\n            <div class=\"game-price-advanced\">\n              <span v-if=\"gpu.originalPrice > 0\" class=\"original-price-advanced\">¥{{ gpu.originalPrice }}</span>\n              <span class=\"sale-price-advanced\">{{ gpu.salePrice > 0 ? `¥${gpu.salePrice}` : '免费' }}</span>\n            </div>\n            \n            <!-- 激活状态装饰 -->\n            <div class=\"active-border-advanced\" v-show=\"index === currentIndex\"></div>\n            \n            <!-- 增强的玻璃边框 -->\n            <div class=\"glass-frame-advanced\">\n              <div class=\"glass-corner-advanced top-left\"></div>\n              <div class=\"glass-corner-advanced top-right\"></div>\n              <div class=\"glass-corner-advanced bottom-left\"></div>\n              <div class=\"glass-corner-advanced bottom-right\"></div>\n            </div>\n\n            <!-- 新增：能量场效果 -->\n            <div class=\"energy-orbs\">\n              <div class=\"energy-orb\" v-for=\"i in 3\" :key=\"i\" :style=\"{'--index': i}\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 增强的轮播控制 -->\n    <div class=\"carousel-controls-advanced\" role=\"navigation\" aria-label=\"显卡轮播控制\">\n      <button @click=\"prevGpu\" \n              @keydown.enter=\"prevGpu\"\n              @keydown.space.prevent=\"prevGpu\"\n              class=\"control-btn-advanced prev glass-button-advanced\"\n              aria-label=\"上一个显卡\"\n              tabindex=\"0\">\n        <i class=\"bi bi-chevron-left\" aria-hidden=\"true\"></i>\n        <div class=\"button-glow\"></div>\n      </button>\n      \n      <div class=\"game-indicators-advanced\" role=\"tablist\" aria-label=\"显卡选择指示器\">\n        <button \n          v-for=\"(gpu, index) in gpus\" \n          :key=\"index\"\n          @click=\"selectGpu(index)\"\n          @keydown.enter=\"selectGpu(index)\"\n          @keydown.space.prevent=\"selectGpu(index)\"\n          class=\"indicator-advanced\"\n          :class=\"{ 'active': index === currentIndex }\"\n          role=\"tab\"\n          :aria-selected=\"index === currentIndex\"\n          :aria-label=\"`选择显卡: ${gpu.title}`\"\n          :tabindex=\"index === currentIndex ? 0 : -1\">\n          <div class=\"indicator-inner\"></div>\n          <div class=\"indicator-ripple\"></div>\n          <span class=\"indicator-tooltip-advanced\">{{ gpu.title }}</span>\n        </button>\n      </div>\n      \n      <button @click=\"nextGpu\" \n              @keydown.enter=\"nextGpu\"\n              @keydown.space.prevent=\"nextGpu\"\n              class=\"control-btn-advanced next glass-button-advanced\"\n              aria-label=\"下一个显卡\"\n              tabindex=\"0\">\n        <i class=\"bi bi-chevron-right\" aria-hidden=\"true\"></i>\n        <div class=\"button-glow\"></div>\n      </button>\n    </div>\n    \n    <!-- 重新设计的显卡详情区 -->\n    <div class=\"current-game-info-advanced\" role=\"main\" aria-label=\"当前选中显卡详情\">\n      <div class=\"glass-card-premium rounded-2xl p-10 max-w-6xl mx-auto border border-cyan-500/30 shadow-2xl shadow-cyan-500/20\">\n        <div class=\"grid md:grid-cols-5 gap-10 items-center\">\n          <div class=\"md:col-span-2\">\n            <div class=\"game-detail-cover-advanced\">\n              <!-- 详情区图片或placeholder -->\n              <div v-if=\"selectedGpu.image\" class=\"detail-image-container\">\n                <img :src=\"selectedGpu.image\" \n                     :alt=\"`${selectedGpu.title} 显卡封面`\" \n                     class=\"w-full rounded-lg shadow-lg\"\n                     loading=\"lazy\"\n                     @error=\"$event.target.style.display = 'none'\" />\n              </div>\n              <div v-else class=\"detail-gpu-placeholder\">\n                <i class=\"bi bi-gpu-card\"></i>\n                <span class=\"detail-gpu-name\">{{ selectedGpu.title }}</span>\n                <span class=\"detail-gpu-model\">{{ selectedGpu.model }}</span>\n              </div>\n              \n              <div class=\"cover-overlay-advanced\">\n                <button class=\"play-button-advanced\"\n                        @click=\"openProductLink\"\n                        @keydown.enter=\"openProductLink\"\n                        @keydown.space.prevent=\"openProductLink\"\n                        aria-label=\"在Steam上查看显卡\"\n                        tabindex=\"0\">\n                  <i class=\"bi bi-play-fill\" aria-hidden=\"true\"></i>\n                  <div class=\"play-ripple\"></div>\n                </button>\n              </div>\n              <div class=\"detail-glass-overlay-advanced\"></div>\n              <div class=\"cover-energy-field\"></div>\n            </div>\n          </div>\n          <div class=\"md:col-span-3\">\n            <header>\n              <h2 class=\"text-4xl font-bold text-white mb-6 neon-text-advanced\">{{ selectedGpu.title }}</h2>\n            </header>\n            <p class=\"text-gray-300 text-lg mb-8 leading-relaxed\">{{ selectedGpu.description }}</p>\n            \n            <div class=\"game-badges-advanced mb-8\" role=\"list\" aria-label=\"显卡信息标签\">\n              <span class=\"badge-advanced genre-badge\" role=\"listitem\">\n                <i class=\"bi bi-tag\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">显卡类型：</span>{{ selectedGpu.model }}\n              </span>\n              <span class=\"badge-advanced rating-badge\" role=\"listitem\">\n                <i class=\"bi bi-star-fill\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">评分：</span>{{ selectedGpu.rating }}\n              </span>\n              <span class=\"badge-advanced year-badge\" role=\"listitem\">\n                <i class=\"bi bi-calendar\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">发布年份：</span>{{ selectedGpu.releaseYear }}\n              </span>\n            </div>\n\n            <!-- 显卡规格展示 -->\n            <div class=\"gpu-specs-grid mb-8\">\n              <div class=\"spec-item\">\n                <i class=\"bi bi-memory text-cyan-400\"></i>\n                <span class=\"spec-label\">显存</span>\n                <span class=\"spec-value\">{{ selectedGpu.specs.memory }}</span>\n              </div>\n              <div class=\"spec-item\">\n                <i class=\"bi bi-cpu text-cyan-400\"></i>\n                <span class=\"spec-label\">CUDA核心</span>\n                <span class=\"spec-value\">{{ selectedGpu.specs.cores }}</span>\n              </div>\n              <div class=\"spec-item\">\n                <i class=\"bi bi-speedometer2 text-cyan-400\"></i>\n                <span class=\"spec-label\">加速频率</span>\n                <span class=\"spec-value\">{{ selectedGpu.specs.boost }}</span>\n              </div>\n              <div class=\"spec-item\">\n                <i class=\"bi bi-lightning text-cyan-400\"></i>\n                <span class=\"spec-label\">功耗</span>\n                <span class=\"spec-value\">{{ selectedGpu.specs.power }}</span>\n              </div>\n            </div>\n\n            <!-- 特性列表 -->\n            <div class=\"gpu-features mb-8\">\n              <h4 class=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                <i class=\"bi bi-gear-fill text-cyan-400\"></i>\n                核心特性\n              </h4>\n              <div class=\"feature-tags\">\n                <span v-for=\"feature in selectedGpu.features\" :key=\"feature\" \n                      class=\"feature-tag\">\n                  <i class=\"bi bi-check-circle-fill text-green-400\"></i>\n                  {{ feature }}\n                </span>\n              </div>\n            </div>\n            \n            <div class=\"flex items-center justify-between\">\n              <div class=\"price-section-advanced\" role=\"region\" aria-label=\"价格信息\">\n                <span v-if=\"selectedGpu.originalPrice > 0\" \n                      class=\"text-gray-400 text-xl line-through mr-4\"\n                      aria-label=\"原价\">¥{{ selectedGpu.originalPrice.toLocaleString() }}</span>\n                <span class=\"text-4xl font-bold text-cyan-400 neon-text-price\"\n                      aria-label=\"当前价格\">¥{{ selectedGpu.salePrice.toLocaleString() }}</span>\n                <span v-if=\"selectedGpu.originalPrice > 0 && selectedGpu.salePrice > 0\" \n                      class=\"text-green-400 text-lg ml-4 discount-badge\"\n                      aria-label=\"折扣\">\n                  -{{ Math.round((1 - selectedGpu.salePrice / selectedGpu.originalPrice) * 100) }}%\n                </span>\n              </div>\n              \n              <button @click=\"openProductLink\" \n                      @keydown.enter=\"openProductLink\"\n                      @keydown.space.prevent=\"openProductLink\"\n                      class=\"btn-premium-advanced px-8 py-4 rounded-2xl font-bold text-lg flex items-center gap-3 relative overflow-hidden\"\n                      aria-label=\"查看显卡详情\"\n                      tabindex=\"0\">\n                <i class=\"bi bi-eye mr-3\" aria-hidden=\"true\"></i>\n                查看详情\n                <div class=\"btn-energy-field\"></div>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Nuxt.js 导入\nconst router = useRouter()\n\n// 显卡数据\nconst gpus = ref([\n  {\n    id: 1,\n    title: \"RTX 5090\",\n    model: \"旗舰级显卡\",\n    rating: \"9.8\",\n    releaseYear: \"2025\",\n    originalPrice: 22999,\n    salePrice: 19999,\n    image: \"\",\n    description: \"革命性Blackwell架构，32GB GDDR7显存，专为8K游戏和AI应用而生。支持最新DLSS 4技术，提供前所未有的游戏性能和AI加速能力。\",\n    specs: {\n      memory: \"32GB GDDR7\",\n      cores: \"21504 CUDA\",\n      boost: \"2900 MHz\",\n      power: \"600W\"\n    },\n    features: [\"DLSS 4\", \"8K游戏\", \"AI超采样\", \"实时光追\"]\n  },\n  {\n    id: 2,\n    title: \"RTX 5080\",\n    model: \"高端游戏显卡\",\n    rating: \"9.5\",\n    releaseYear: \"2025\",\n    originalPrice: 14999,\n    salePrice: 12999,\n    image: \"\",\n    description: \"次旗舰级性能，16GB GDDR7显存，完美支持4K高帧率游戏。配备先进的Ada Lovelace升级架构，为高端游戏玩家提供极致体验。\",\n    specs: {\n      memory: \"16GB GDDR7\",\n      cores: \"14080 CUDA\",\n      boost: \"2700 MHz\",\n      power: \"400W\"\n    },\n    features: [\"DLSS 4\", \"4K 120FPS\", \"光追优化\", \"创作加速\"]\n  },\n  {\n    id: 3,\n    title: \"RTX 5070 Ti\",\n    model: \"性能级显卡\",\n    rating: \"9.2\",\n    releaseYear: \"2025\",\n    originalPrice: 8999,\n    salePrice: 7999,\n    image: \"\",\n    description: \"主流性能王者，12GB GDDR7显存，1440p游戏最佳选择。采用最新架构优化，提供出色的性价比和游戏表现。\",\n    specs: {\n      memory: \"12GB GDDR7\",\n      cores: \"8960 CUDA\",\n      boost: \"2600 MHz\",\n      power: \"285W\"\n    },\n    features: [\"DLSS 4\", \"1440p极致\", \"效率优化\", \"温控出色\"]\n  },\n  {\n    id: 4,\n    title: \"RTX 5070\",\n    model: \"主流游戏显卡\",\n    rating: \"8.9\",\n    releaseYear: \"2025\",\n    originalPrice: 6999,\n    salePrice: 5999,\n    image: \"\",\n    description: \"主流游戏新标杆，12GB GDDR6X显存，提供1440p高设置游戏体验。出色的能效比和先进的AI功能，满足大多数玩家需求。\",\n    specs: {\n      memory: \"12GB GDDR6X\",\n      cores: \"5888 CUDA\",\n      boost: \"2500 MHz\",\n      power: \"220W\"\n    },\n    features: [\"DLSS 4\", \"1440p高画质\", \"低功耗\", \"静音运行\"]\n  },\n  {\n    id: 5,\n    title: \"RTX 5060 Ti\",\n    model: \"入门级显卡\",\n    rating: \"8.6\",\n    releaseYear: \"2025\",\n    originalPrice: 4999,\n    salePrice: 3999,\n    image: \"\",\n    description: \"入门级RTX体验，8GB GDDR6X显存，1080p光追游戏首选。为预算有限的玩家提供RTX技术和AI功能体验。\",\n    specs: {\n      memory: \"8GB GDDR6X\",\n      cores: \"4352 CUDA\",\n      boost: \"2400 MHz\",\n      power: \"165W\"\n    },\n    features: [\"DLSS 4\", \"1080p光追\", \"节能设计\", \"超值选择\"]\n  }\n])\n\nconst currentIndex = ref(0)\nconst rotation = ref(0)\nconst autoRotate = ref(true)\nconst isHovered = ref(false)\nconst preloadedImages = ref(new Set())\n\n// 性能优化：当前选中的显卡\nconst selectedGpu = computed(() => gpus.value[currentIndex.value])\n\n// 性能优化：预加载图片\nconst preloadImages = () => {\n  gpus.value.forEach(gpu => {\n    if (!preloadedImages.value.has(gpu.image)) {\n      const img = new Image()\n      img.onload = () => {\n        preloadedImages.value.add(gpu.image)\n      }\n      img.src = gpu.image\n    }\n  })\n}\n\n// 选择显卡 - 增强版\nconst selectGpu = (index) => {\n  if (index === currentIndex.value) return\n  \n  currentIndex.value = index\n  rotation.value = -index * (360 / gpus.value.length)\n  \n  // 触觉反馈（如果支持）\n  if (navigator.vibrate) {\n    navigator.vibrate(50)\n  }\n  \n  // 暂停自动轮播\n  autoRotate.value = false\n  setTimeout(() => {\n    if (!isHovered.value) {\n      autoRotate.value = true\n    }\n  }, 3000)\n}\n\n// 下一个显卡 - 优化版\nconst nextGpu = () => {\n  const nextIndex = (currentIndex.value + 1) % gpus.value.length\n  selectGpu(nextIndex)\n}\n\n// 上一个显卡 - 优化版\nconst prevGpu = () => {\n  const prevIndex = currentIndex.value === 0 ? gpus.value.length - 1 : currentIndex.value - 1\n  selectGpu(prevIndex)\n}\n\n// 鼠标悬停控制\nconst handleMouseEnter = () => {\n  isHovered.value = true\n  autoRotate.value = false\n}\n\nconst handleMouseLeave = () => {\n  isHovered.value = false\n  setTimeout(() => {\n    if (!isHovered.value) {\n      autoRotate.value = true\n    }\n  }, 1000)\n}\n\n// 键盘控制\nconst handleKeyPress = (event) => {\n  switch (event.key) {\n    case 'ArrowLeft':\n      event.preventDefault()\n      prevGpu()\n      break\n    case 'ArrowRight':\n      event.preventDefault()\n      nextGpu()\n      break\n    case ' ':\n      event.preventDefault()\n      autoRotate.value = !autoRotate.value\n      break\n    case 'Enter':\n      event.preventDefault()\n      // 可以在这里添加打开Steam链接的逻辑\n      break\n  }\n}\n\n// 触摸控制\nconst touchStartX = ref(0)\nconst touchEndX = ref(0)\n\nconst handleTouchStart = (event) => {\n  touchStartX.value = event.touches[0].clientX\n}\n\nconst handleTouchEnd = (event) => {\n  touchEndX.value = event.changedTouches[0].clientX\n  handleSwipe()\n}\n\nconst handleSwipe = () => {\n  const swipeThreshold = 50\n  const diff = touchStartX.value - touchEndX.value\n  \n  if (Math.abs(diff) > swipeThreshold) {\n    if (diff > 0) {\n      nextGpu()\n    } else {\n      prevGpu()\n    }\n  }\n}\n\n// 滚轮控制\nconst handleWheel = (event) => {\n  event.preventDefault()\n  const delta = event.deltaY\n  \n  if (delta > 0) {\n    nextGpu()\n  } else {\n    prevGpu()\n  }\n}\n\n// 自动轮播定时器\nlet autoRotateInterval = null\n\nconst startAutoRotate = () => {\n  if (autoRotateInterval) {\n    clearInterval(autoRotateInterval)\n  }\n  \n  autoRotateInterval = setInterval(() => {\n    if (autoRotate.value && !isHovered.value) {\n      nextGpu()\n    }\n  }, 4500) // 增加轮播间隔，给用户更多时间欣赏\n}\n\nconst stopAutoRotate = () => {\n  if (autoRotateInterval) {\n    clearInterval(autoRotateInterval)\n    autoRotateInterval = null\n  }\n}\n\n// Intersection Observer 用于性能优化\nconst observerTarget = ref(null)\nconst isVisible = ref(false)\n\nconst setupIntersectionObserver = () => {\n  if (!observerTarget.value) return\n  \n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        isVisible.value = entry.isIntersecting\n        if (entry.isIntersecting) {\n          startAutoRotate()\n          preloadImages()\n        } else {\n          stopAutoRotate()\n        }\n      })\n    },\n    { threshold: 0.3 }\n  )\n  \n  observer.observe(observerTarget.value)\n  \n  return observer\n}\n\n// 打开产品链接\nconst openProductLink = () => {\n  const productUrl = `/products/${selectedGpu.value.id}`\n  router.push(productUrl)\n}\n\n// 生命周期管理\nonMounted(() => {\n  // 预加载图片\n  preloadImages()\n  \n  // 设置Intersection Observer\n  nextTick(() => {\n    setupIntersectionObserver()\n  })\n  \n  // 添加事件监听器\n  window.addEventListener('keydown', handleKeyPress)\n  \n  // 开始自动轮播\n  startAutoRotate()\n  \n  // 添加页面可见性变化监听\n  document.addEventListener('visibilitychange', () => {\n    if (document.hidden) {\n      autoRotate.value = false\n      stopAutoRotate()\n    } else if (isVisible.value) {\n      setTimeout(() => {\n        if (!isHovered.value) {\n          autoRotate.value = true\n          startAutoRotate()\n        }\n      }, 1000)\n    }\n  })\n})\n\nonUnmounted(() => {\n  // 清理定时器\n  stopAutoRotate()\n  \n  // 移除事件监听器\n  window.removeEventListener('keydown', handleKeyPress)\n  \n  // 清理其他资源\n  preloadedImages.value.clear()\n})\n\n// 提供给父组件的方法\ndefineExpose({\n  nextGpu,\n  prevGpu,\n  selectGpu,\n  currentIndex: readonly(currentIndex),\n  selectedGpu: readonly(selectedGpu)\n})\n</script>\n\n<style scoped>\n.steam-carousel-container {\n  min-height: 1300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4rem;\n  padding: 6rem 0;\n  position: relative;\n  overflow: hidden;\n}\n\n/* 粒子系统 */\n.particle-system {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow: hidden;\n}\n\n.particle {\n  position: absolute;\n  width: var(--size);\n  height: var(--size);\n  background: radial-gradient(circle, rgba(0, 245, 255, 0.8) 0%, transparent 70%);\n  border-radius: 50%;\n  left: var(--x);\n  top: var(--y);\n  animation: particleFloat var(--duration) ease-in-out infinite var(--delay);\n  filter: blur(1px);\n}\n\n/* 增强背景装饰 */\n.carousel-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow: hidden;\n}\n\n.bg-pattern {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: \n    radial-gradient(circle at 25% 25%, rgba(0, 245, 255, 0.15) 0%, transparent 50%),\n    radial-gradient(circle at 75% 75%, rgba(0, 128, 255, 0.15) 0%, transparent 50%),\n    radial-gradient(circle at 50% 50%, rgba(255, 0, 128, 0.08) 0%, transparent 60%);\n  animation: patternMove 25s ease-in-out infinite;\n}\n\n.bg-glow-1, .bg-glow-2, .bg-glow-3 {\n  position: absolute;\n  border-radius: 50%;\n  filter: blur(30px);\n}\n\n.bg-glow-1 {\n  top: 10%;\n  left: 5%;\n  width: 500px;\n  height: 500px;\n  background: radial-gradient(circle, rgba(0, 245, 255, 0.2) 0%, transparent 70%);\n  animation: float1 20s ease-in-out infinite;\n}\n\n.bg-glow-2 {\n  top: 60%;\n  right: 5%;\n  width: 400px;\n  height: 400px;\n  background: radial-gradient(circle, rgba(0, 128, 255, 0.2) 0%, transparent 70%);\n  animation: float2 25s ease-in-out infinite;\n}\n\n.bg-glow-3 {\n  top: 35%;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 300px;\n  height: 300px;\n  background: radial-gradient(circle, rgba(255, 0, 128, 0.15) 0%, transparent 70%);\n  animation: float3 18s ease-in-out infinite;\n}\n\n.energy-field {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: \n    linear-gradient(45deg, transparent 48%, rgba(0, 245, 255, 0.02) 49%, rgba(0, 245, 255, 0.02) 51%, transparent 52%),\n    linear-gradient(-45deg, transparent 48%, rgba(0, 128, 255, 0.02) 49%, rgba(0, 128, 255, 0.02) 51%, transparent 52%);\n  background-size: 100px 100px;\n  animation: energyField 10s linear infinite;\n}\n\n/* 图标脉冲效果 */\n.pulse-icon {\n  animation: iconPulse 3s ease-in-out infinite;\n}\n\n/* 增强的标题装饰 */\n.title-underline {\n  width: 250px;\n  height: 6px;\n  background: linear-gradient(90deg, transparent, #00f5ff, #ff0080, #00f5ff, transparent);\n  margin: 2rem auto;\n  border-radius: 3px;\n  box-shadow: 0 0 30px rgba(0, 245, 255, 0.8);\n  animation: titleGlow 4s ease-in-out infinite alternate;\n}\n\n/* 3D场景环境 */\n.carousel-3d-scene {\n  perspective: 2500px;\n  height: 700px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 4rem 0;\n  position: relative;\n}\n\n.carousel-environment {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n\n.env-ring {\n  position: absolute;\n  border: 1px solid rgba(0, 245, 255, 0.2);\n  border-radius: 50%;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%) rotateX(75deg);\n}\n\n.ring-1 {\n  width: 800px;\n  height: 800px;\n  animation: ringRotate1 20s linear infinite;\n}\n\n.ring-2 {\n  width: 1000px;\n  height: 1000px;\n  animation: ringRotate2 30s linear infinite reverse;\n}\n\n.ring-3 {\n  width: 1200px;\n  height: 1200px;\n  animation: ringRotate3 40s linear infinite;\n}\n\n.carousel-3d-stage {\n  position: relative;\n  width: 520px;\n  height: 520px;\n  transform-style: preserve-3d;\n  transition: transform 1.2s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* 增强的3D轮播项 */\n.carousel-3d-item {\n  position: absolute;\n  width: 520px;\n  height: 520px;\n  cursor: pointer;\n  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);\n  animation: fadeInItem 1s ease-out;\n  animation-delay: var(--delay);\n  animation-fill-mode: both;\n  transform-origin: center center;\n}\n\n.carousel-3d-item:hover {\n  transform: rotateY(var(--rotation)) translateZ(600px) scale(1.02) !important;\n}\n\n.carousel-3d-item.active {\n  z-index: 10;\n  transform: rotateY(var(--rotation)) translateZ(580px) scale(1.05) !important;\n}\n\n/* 增强的玻璃形态设计 */\n.glass-morphism-enhanced {\n  backdrop-filter: blur(25px);\n  -webkit-backdrop-filter: blur(25px);\n  background: rgba(255, 255, 255, 0.08);\n  border: 3px solid rgba(255, 255, 255, 0.15);\n}\n\n.hologram-effect {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    180deg,\n    rgba(0, 245, 255, 0.1) 0%,\n    transparent 3%,\n    transparent 97%,\n    rgba(0, 245, 255, 0.1) 100%\n  );\n  background-size: 100% 4px;\n  animation: hologramScan 3s ease-in-out infinite;\n  pointer-events: none;\n  border-radius: inherit;\n}\n\n.glass-overlay-advanced {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    135deg,\n    rgba(255, 255, 255, 0.15) 0%,\n    rgba(255, 255, 255, 0.08) 25%,\n    rgba(255, 255, 255, 0.03) 50%,\n    rgba(0, 0, 0, 0.15) 100%\n  );\n  pointer-events: none;\n  border-radius: inherit;\n}\n\n.glass-reflection-advanced {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 60%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    rgba(255, 255, 255, 0.15) 0%,\n    rgba(255, 255, 255, 0.05) 50%,\n    transparent 100%\n  );\n  pointer-events: none;\n  border-radius: inherit;\n  opacity: 0.8;\n}\n\n/* 增强的游戏封面 */\n.game-cover {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 2.5rem;\n  overflow: hidden;\n  background: linear-gradient(135deg, rgba(0, 245, 255, 0.2), rgba(0, 128, 255, 0.2));\n  border: 4px solid rgba(0, 245, 255, 0.5);\n  box-shadow: \n    0 0 80px rgba(0, 245, 255, 0.6),\n    0 40px 100px rgba(0, 0, 0, 0.5),\n    inset 0 0 120px rgba(255, 255, 255, 0.08);\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  transform-origin: center center;\n}\n\n.game-cover:hover {\n  border-color: rgba(0, 245, 255, 0.9);\n  box-shadow: \n    0 0 120px rgba(0, 245, 255, 1),\n    0 50px 120px rgba(0, 0, 0, 0.6),\n    inset 0 0 180px rgba(255, 255, 255, 0.15);\n}\n\n.game-cover img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  filter: brightness(1.2) contrast(1.3) saturate(1.1);\n  transform-origin: center center;\n}\n\n.game-cover:hover img {\n  transform: scale(1.03);\n}\n\n/* 增强的光效扫描 */\n.light-scan-advanced {\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    rgba(0, 245, 255, 0.2) 10%,\n    rgba(255, 255, 255, 0.8) 50%,\n    rgba(0, 245, 255, 0.2) 90%,\n    transparent 100%\n  );\n  transform: skewX(-25deg);\n  opacity: 0;\n  pointer-events: none;\n}\n\n.light-scan-advanced.scanning {\n  animation: scanAcross 2.5s ease-in-out infinite;\n  opacity: 1;\n}\n\n/* 能量球效果 */\n.energy-orbs {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n}\n\n.energy-orb {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: radial-gradient(circle, rgba(0, 245, 255, 1) 0%, transparent 70%);\n  border-radius: 50%;\n  animation: energyOrbFloat 4s ease-in-out infinite;\n  animation-delay: calc(var(--index) * 1.3s);\n  filter: blur(1px);\n}\n\n.energy-orb:nth-child(1) { top: 20%; left: 10%; }\n.energy-orb:nth-child(2) { top: 70%; right: 15%; }\n.energy-orb:nth-child(3) { bottom: 25%; left: 80%; }\n\n/* 增强的激活边框 */\n.active-border-advanced {\n  position: absolute;\n  top: -10px;\n  left: -10px;\n  right: -10px;\n  bottom: -10px;\n  border: 4px solid #00f5ff;\n  border-radius: 2.5rem;\n  box-shadow: \n    0 0 60px rgba(0, 245, 255, 1),\n    inset 0 0 60px rgba(0, 245, 255, 0.4);\n  animation: activePulse 2s ease-in-out infinite;\n}\n\n/* 增强的玻璃边框 */\n.glass-frame-advanced {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n}\n\n.glass-corner-advanced {\n  position: absolute;\n  width: 40px;\n  height: 40px;\n  border: 3px solid rgba(0, 245, 255, 0.8);\n  transition: all 0.3s ease;\n}\n\n.glass-corner-advanced.top-left {\n  top: 15px;\n  left: 15px;\n  border-right: none;\n  border-bottom: none;\n  border-radius: 12px 0 0 0;\n}\n\n.glass-corner-advanced.top-right {\n  top: 15px;\n  right: 15px;\n  border-left: none;\n  border-bottom: none;\n  border-radius: 0 12px 0 0;\n}\n\n.glass-corner-advanced.bottom-left {\n  bottom: 15px;\n  left: 15px;\n  border-right: none;\n  border-top: none;\n  border-radius: 0 0 0 12px;\n}\n\n.glass-corner-advanced.bottom-right {\n  bottom: 15px;\n  right: 15px;\n  border-left: none;\n  border-top: none;\n  border-radius: 0 0 12px 0;\n}\n\n/* 增强的控制按钮 */\n.carousel-controls-advanced {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4rem;\n  margin: 3rem 0;\n}\n\n.control-btn-advanced {\n  position: relative;\n  width: 4rem;\n  height: 4rem;\n  background: rgba(0, 245, 255, 0.1);\n  backdrop-filter: blur(20px);\n  border: 2px solid rgba(0, 245, 255, 0.5);\n  border-radius: 50%;\n  color: #00f5ff;\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: \n    0 10px 30px rgba(0, 0, 0, 0.4),\n    inset 0 0 30px rgba(255, 255, 255, 0.1);\n  overflow: hidden;\n}\n\n.control-btn-advanced:hover {\n  background: rgba(0, 245, 255, 0.3);\n  border-color: rgba(0, 245, 255, 1);\n  transform: scale(1.1);\n  box-shadow: \n    0 0 50px rgba(0, 245, 255, 0.8),\n    inset 0 0 50px rgba(255, 255, 255, 0.2);\n}\n\n.button-glow {\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(0, 245, 255, 0.3) 0%, transparent 70%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n}\n\n.control-btn-advanced:hover .button-glow {\n  opacity: 1;\n}\n\n/* 增强的指示器 */\n.game-indicators-advanced {\n  display: flex;\n  gap: 1rem;\n}\n\n.indicator-advanced {\n  position: relative;\n  width: 15px;\n  height: 15px;\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(10px);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  overflow: hidden;\n}\n\n.indicator-advanced:hover {\n  transform: scale(1.2);\n  background: rgba(0, 245, 255, 0.3);\n  border-color: rgba(0, 245, 255, 0.8);\n}\n\n.indicator-advanced.active {\n  background: rgba(0, 245, 255, 0.6);\n  border-color: rgba(0, 245, 255, 1);\n  box-shadow: 0 0 20px rgba(0, 245, 255, 1);\n}\n\n.indicator-inner {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 6px;\n  height: 6px;\n  background: #00f5ff;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.indicator-advanced.active .indicator-inner {\n  opacity: 1;\n}\n\n.indicator-ripple {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 30px;\n  height: 30px;\n  border: 2px solid rgba(0, 245, 255, 0.6);\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0;\n  animation: rippleEffect 2s ease-out infinite;\n}\n\n.indicator-advanced.active .indicator-ripple {\n  opacity: 1;\n}\n\n/* 增强动画 */\n@keyframes particleFloat {\n  0%, 100% { \n    transform: translateY(0) rotate(0deg);\n    opacity: 0.3;\n  }\n  50% { \n    transform: translateY(-100px) rotate(180deg);\n    opacity: 1;\n  }\n}\n\n@keyframes iconPulse {\n  0%, 100% {\n    transform: scale(1);\n    filter: drop-shadow(0 0 10px rgba(0, 245, 255, 0.5));\n  }\n  50% {\n    transform: scale(1.1);\n    filter: drop-shadow(0 0 20px rgba(0, 245, 255, 1));\n  }\n}\n\n@keyframes hologramScan {\n  0%, 100% { \n    background-position: 0 0;\n    opacity: 0.3;\n  }\n  50% { \n    background-position: 0 100%;\n    opacity: 0.8;\n  }\n}\n\n@keyframes energyField {\n  0% { background-position: 0 0; }\n  100% { background-position: 100px 100px; }\n}\n\n@keyframes energyOrbFloat {\n  0%, 100% {\n    transform: translateY(0) scale(1);\n    opacity: 0.6;\n  }\n  50% {\n    transform: translateY(-20px) scale(1.2);\n    opacity: 1;\n  }\n}\n\n@keyframes ringRotate1 {\n  from { transform: translate(-50%, -50%) rotateX(75deg) rotateZ(0deg); }\n  to { transform: translate(-50%, -50%) rotateX(75deg) rotateZ(360deg); }\n}\n\n@keyframes ringRotate2 {\n  from { transform: translate(-50%, -50%) rotateX(75deg) rotateZ(0deg); }\n  to { transform: translate(-50%, -50%) rotateX(75deg) rotateZ(360deg); }\n}\n\n@keyframes ringRotate3 {\n  from { transform: translate(-50%, -50%) rotateX(75deg) rotateZ(0deg); }\n  to { transform: translate(-50%, -50%) rotateX(75deg) rotateZ(360deg); }\n}\n\n@keyframes rippleEffect {\n  0% {\n    transform: translate(-50%, -50%) scale(0.5);\n    opacity: 1;\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(2);\n    opacity: 0;\n  }\n}\n\n@keyframes float3 {\n  0%, 100% { transform: translateX(-50%) translateY(0) rotate(0deg); }\n  50% { transform: translateX(-50%) translateY(-40px) rotate(180deg); }\n}\n\n/* 响应式设计增强 */\n@media (max-width: 768px) {\n  .steam-carousel-container {\n    min-height: 1000px;\n    padding: 2rem 0;\n  }\n  \n  .carousel-3d-scene {\n    height: 450px;\n  }\n  \n  .carousel-3d-stage,\n  .carousel-3d-item,\n  .game-cover {\n    width: 350px;\n    height: 350px;\n  }\n  \n  .carousel-3d-item {\n    transform: rotateY(var(--rotation)) translateZ(350px) !important;\n  }\n  \n  .carousel-3d-item.active {\n    transform: rotateY(var(--rotation)) translateZ(400px) scale(1.05) !important;\n  }\n  \n  .control-btn-advanced {\n    width: 3rem;\n    height: 3rem;\n    font-size: 1.2rem;\n  }\n  \n  .carousel-controls-advanced {\n    gap: 2rem;\n  }\n}\n\n/* 添加缺失的样式类 */\n\n/* 发光效果增强 */\n.game-glow {\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(0, 245, 255, 0.25) 0%, transparent 70%);\n  opacity: 0;\n  transition: opacity 0.5s ease;\n  pointer-events: none;\n  filter: blur(25px);\n}\n\n.carousel-3d-item.active .game-glow,\n.game-cover:hover .game-glow {\n  opacity: 1;\n}\n\n/* 增强的游戏信息 */\n.game-info-advanced {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: linear-gradient(to top, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.6), transparent);\n  backdrop-filter: blur(15px);\n  padding: 2rem 1.5rem 1.5rem;\n  border-radius: 0 0 2.5rem 2.5rem;\n  transform: translateY(100%);\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0;\n}\n\n.carousel-3d-item:hover .game-info-advanced,\n.carousel-3d-item.active .game-info-advanced {\n  transform: translateY(0);\n  opacity: 1;\n}\n\n.game-title-advanced {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #ffffff;\n  margin-bottom: 0.5rem;\n  text-shadow: 0 0 10px rgba(0, 245, 255, 0.5);\n  line-height: 1.2;\n}\n\n.game-genre-advanced {\n  font-size: 0.9rem;\n  color: #00f5ff;\n  margin-bottom: 1rem;\n  font-weight: 500;\n}\n\n.game-stats-advanced {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.game-rating-advanced {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #ffd700;\n  font-weight: 600;\n}\n\n.game-year-advanced {\n  color: #94a3b8;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n/* 增强的价格显示 */\n.game-price-advanced {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: rgba(0, 0, 0, 0.8);\n  backdrop-filter: blur(20px);\n  border: 2px solid rgba(0, 245, 255, 0.5);\n  border-radius: 1rem;\n  padding: 0.75rem 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.25rem;\n  box-shadow: \n    0 8px 30px rgba(0, 0, 0, 0.5),\n    inset 0 0 20px rgba(0, 245, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.game-price-advanced:hover {\n  transform: scale(1.05);\n  border-color: rgba(0, 245, 255, 0.8);\n  box-shadow: \n    0 0 25px rgba(0, 245, 255, 0.6),\n    inset 0 0 30px rgba(0, 245, 255, 0.2);\n}\n\n.original-price-advanced {\n  font-size: 0.75rem;\n  color: #94a3b8;\n  text-decoration: line-through;\n  opacity: 0.8;\n}\n\n.sale-price-advanced {\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #00f5ff;\n  text-shadow: 0 0 8px rgba(0, 245, 255, 0.6);\n}\n\n/* 详情区域增强 */\n.current-game-info-advanced {\n  margin-top: 4rem;\n}\n\n.glass-card-premium {\n  background: rgba(0, 0, 0, 0.4);\n  backdrop-filter: blur(30px);\n  border: 3px solid rgba(0, 245, 255, 0.4);\n  box-shadow: \n    0 30px 100px rgba(0, 0, 0, 0.6),\n    inset 0 0 80px rgba(255, 255, 255, 0.08);\n  position: relative;\n  overflow: hidden;\n}\n\n.glass-card-premium::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    135deg,\n    rgba(255, 255, 255, 0.1) 0%,\n    transparent 50%,\n    rgba(0, 245, 255, 0.05) 100%\n  );\n  pointer-events: none;\n}\n\n.game-detail-cover-advanced {\n  position: relative;\n  overflow: hidden;\n  border-radius: 1.5rem;\n  background: rgba(255, 255, 255, 0.08);\n  backdrop-filter: blur(15px);\n  border: 3px solid rgba(255, 255, 255, 0.15);\n  box-shadow: \n    0 20px 60px rgba(0, 0, 0, 0.4),\n    inset 0 0 40px rgba(255, 255, 255, 0.05);\n  transition: all 0.4s ease;\n}\n\n.game-detail-cover-advanced:hover {\n  transform: scale(1.02);\n  border-color: rgba(0, 245, 255, 0.5);\n  box-shadow: \n    0 25px 80px rgba(0, 0, 0, 0.5),\n    0 0 40px rgba(0, 245, 255, 0.3),\n    inset 0 0 60px rgba(255, 255, 255, 0.08);\n}\n\n.cover-overlay-advanced {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    45deg,\n    rgba(0, 0, 0, 0.3) 0%,\n    transparent 50%,\n    rgba(0, 245, 255, 0.1) 100%\n  );\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: all 0.4s ease;\n}\n\n.game-detail-cover-advanced:hover .cover-overlay-advanced {\n  opacity: 1;\n}\n\n.play-button-advanced {\n  position: relative;\n  width: 80px;\n  height: 80px;\n  background: rgba(0, 245, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border: 3px solid rgba(255, 255, 255, 0.4);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  overflow: hidden;\n  box-shadow: \n    0 0 40px rgba(0, 245, 255, 0.8),\n    inset 0 0 30px rgba(255, 255, 255, 0.2);\n}\n\n.play-button-advanced:hover {\n  transform: scale(1.1);\n  background: rgba(0, 245, 255, 1);\n  box-shadow: \n    0 0 60px rgba(0, 245, 255, 1),\n    inset 0 0 50px rgba(255, 255, 255, 0.3);\n}\n\n.play-ripple {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 120px;\n  height: 120px;\n  border: 2px solid rgba(255, 255, 255, 0.6);\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  animation: playRipple 2s ease-out infinite;\n}\n\n.detail-glass-overlay-advanced {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    135deg,\n    rgba(255, 255, 255, 0.1) 0%,\n    transparent 30%,\n    transparent 70%,\n    rgba(0, 245, 255, 0.05) 100%\n  );\n  pointer-events: none;\n}\n\n.cover-energy-field {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: \n    radial-gradient(circle at 20% 80%, rgba(0, 245, 255, 0.03) 0%, transparent 50%),\n    radial-gradient(circle at 80% 20%, rgba(255, 0, 128, 0.03) 0%, transparent 50%);\n  animation: energyPulse 4s ease-in-out infinite;\n  pointer-events: none;\n}\n\n/* 霓虹灯文字效果增强 */\n.neon-text-advanced {\n  text-shadow: \n    0 0 5px currentColor,\n    0 0 10px currentColor,\n    0 0 20px currentColor,\n    0 0 40px currentColor;\n  animation: neonPulse 3s ease-in-out infinite alternate;\n}\n\n.neon-text-price {\n  text-shadow: \n    0 0 8px currentColor,\n    0 0 16px currentColor,\n    0 0 32px currentColor,\n    0 0 64px currentColor;\n  animation: priceGlow 2.5s ease-in-out infinite alternate;\n}\n\n/* 标签增强 */\n.game-badges-advanced {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.badge-advanced {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(15px);\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  border-radius: 2rem;\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #ffffff;\n  box-shadow: \n    0 6px 20px rgba(0, 0, 0, 0.3),\n    inset 0 0 20px rgba(255, 255, 255, 0.05);\n  transition: all 0.3s ease;\n}\n\n.badge-advanced:hover {\n  transform: translateY(-2px);\n  border-color: rgba(0, 245, 255, 0.6);\n  box-shadow: \n    0 8px 30px rgba(0, 0, 0, 0.4),\n    0 0 20px rgba(0, 245, 255, 0.4),\n    inset 0 0 30px rgba(255, 255, 255, 0.1);\n}\n\n.badge-advanced.genre-badge { border-color: rgba(0, 245, 255, 0.4); }\n.badge-advanced.rating-badge { border-color: rgba(255, 215, 0, 0.4); }\n.badge-advanced.year-badge { border-color: rgba(168, 85, 247, 0.4); }\n\n/* 价格区域增强 */\n.price-section-advanced {\n  display: flex;\n  align-items: baseline;\n  gap: 1rem;\n  margin-bottom: 1rem;\n}\n\n.discount-badge {\n  display: inline-flex;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  background: linear-gradient(135deg, #10b981, #059669);\n  color: white;\n  border-radius: 1rem;\n  font-weight: 700;\n  box-shadow: \n    0 4px 15px rgba(16, 185, 129, 0.4),\n    inset 0 0 20px rgba(255, 255, 255, 0.2);\n  animation: discountPulse 2s ease-in-out infinite;\n}\n\n/* 按钮增强 */\n.btn-premium-advanced {\n  position: relative;\n  background: linear-gradient(135deg, rgba(0, 245, 255, 0.2), rgba(0, 128, 255, 0.2));\n  backdrop-filter: blur(20px);\n  border: 3px solid rgba(0, 245, 255, 0.5);\n  color: #ffffff;\n  overflow: hidden;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: \n    0 15px 50px rgba(0, 0, 0, 0.4),\n    inset 0 0 40px rgba(255, 255, 255, 0.1);\n}\n\n.btn-premium-advanced:hover {\n  background: linear-gradient(135deg, rgba(0, 245, 255, 0.4), rgba(0, 128, 255, 0.4));\n  border-color: rgba(0, 245, 255, 1);\n  transform: translateY(-3px) scale(1.02);\n  box-shadow: \n    0 20px 70px rgba(0, 0, 0, 0.5),\n    0 0 50px rgba(0, 245, 255, 0.6),\n    inset 0 0 60px rgba(255, 255, 255, 0.15);\n}\n\n.btn-energy-field {\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    rgba(255, 255, 255, 0.2) 50%,\n    transparent 100%\n  );\n  transition: left 0.6s ease;\n}\n\n.btn-premium-advanced:hover .btn-energy-field {\n  left: 100%;\n}\n\n/* 提示框增强 */\n.indicator-tooltip-advanced {\n  position: absolute;\n  bottom: 150%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 0, 0, 0.9);\n  backdrop-filter: blur(20px);\n  border: 2px solid rgba(0, 245, 255, 0.5);\n  border-radius: 0.75rem;\n  padding: 0.75rem 1rem;\n  color: #ffffff;\n  font-size: 0.8rem;\n  font-weight: 600;\n  white-space: nowrap;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.3s ease;\n  box-shadow: \n    0 10px 30px rgba(0, 0, 0, 0.6),\n    0 0 20px rgba(0, 245, 255, 0.3);\n  z-index: 100;\n}\n\n.indicator-tooltip-advanced::after {\n  content: '';\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  border: 6px solid transparent;\n  border-top-color: rgba(0, 245, 255, 0.5);\n}\n\n.indicator-advanced:hover .indicator-tooltip-advanced {\n  opacity: 1;\n  visibility: visible;\n  transform: translateX(-50%) translateY(-5px);\n}\n\n/* 新增动画 */\n@keyframes playRipple {\n  0% {\n    transform: translate(-50%, -50%) scale(0.8);\n    opacity: 1;\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(1.5);\n    opacity: 0;\n  }\n}\n\n@keyframes energyPulse {\n  0%, 100% {\n    opacity: 0.3;\n    transform: scale(1);\n  }\n  50% {\n    opacity: 0.8;\n    transform: scale(1.05);\n  }\n}\n\n@keyframes neonPulse {\n  0% { \n    text-shadow: \n      0 0 5px currentColor,\n      0 0 10px currentColor,\n      0 0 20px currentColor,\n      0 0 40px currentColor;\n  }\n  100% { \n    text-shadow: \n      0 0 10px currentColor,\n      0 0 20px currentColor,\n      0 0 40px currentColor,\n      0 0 80px currentColor;\n  }\n}\n\n@keyframes priceGlow {\n  0% { \n    text-shadow: \n      0 0 8px currentColor,\n      0 0 16px currentColor,\n      0 0 32px currentColor,\n      0 0 64px currentColor;\n  }\n  100% { \n    text-shadow: \n      0 0 12px currentColor,\n      0 0 24px currentColor,\n      0 0 48px currentColor,\n      0 0 96px currentColor;\n  }\n}\n\n@keyframes discountPulse {\n  0%, 100% {\n    transform: scale(1);\n    box-shadow: \n      0 4px 15px rgba(16, 185, 129, 0.4),\n      inset 0 0 20px rgba(255, 255, 255, 0.2);\n  }\n  50% {\n    transform: scale(1.05);\n    box-shadow: \n      0 6px 25px rgba(16, 185, 129, 0.6),\n      inset 0 0 30px rgba(255, 255, 255, 0.3);\n  }\n}\n\n@keyframes scanAcross {\n  0% { left: -100%; opacity: 0; }\n  10% { opacity: 1; }\n  90% { opacity: 1; }\n  100% { left: 100%; opacity: 0; }\n}\n\n@keyframes titleGlow {\n  0% { box-shadow: 0 0 30px rgba(0, 245, 255, 0.8); }\n  100% { box-shadow: 0 0 50px rgba(0, 245, 255, 1), 0 0 80px rgba(255, 0, 128, 0.6); }\n}\n\n@keyframes activePulse {\n  0%, 100% {\n    box-shadow: \n      0 0 60px rgba(0, 245, 255, 1),\n      inset 0 0 60px rgba(0, 245, 255, 0.4);\n  }\n  50% {\n    box-shadow: \n      0 0 100px rgba(0, 245, 255, 1),\n      inset 0 0 100px rgba(0, 245, 255, 0.6);\n  }\n}\n\n@keyframes fadeInItem {\n  from {\n    opacity: 0;\n    transform: rotateY(var(--rotation)) translateZ(400px) scale(0.8);\n  }\n  to {\n    opacity: 1;\n    transform: rotateY(var(--rotation)) translateZ(500px) scale(1);\n  }\n}\n\n@keyframes patternMove {\n  0%, 100% { transform: translateX(0) translateY(0); }\n  25% { transform: translateX(30px) translateY(-30px); }\n  50% { transform: translateX(-20px) translateY(20px); }\n  75% { transform: translateX(-30px) translateY(-20px); }\n}\n\n@keyframes float1 {\n  0%, 100% { transform: translateY(0) rotate(0deg); }\n  50% { transform: translateY(-40px) rotate(180deg); }\n}\n\n@keyframes float2 {\n  0%, 100% { transform: translateY(0) rotate(0deg); }\n  50% { transform: translateY(30px) rotate(-180deg); }\n}\n\n/* 无障碍访问工具类 */\n.sr-only {\n  position: absolute !important;\n  width: 1px !important;\n  height: 1px !important;\n  padding: 0 !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  clip: rect(0, 0, 0, 0) !important;\n  white-space: nowrap !important;\n  border: 0 !important;\n}\n\n/* 焦点样式增强 */\n.carousel-3d-item:focus,\n.control-btn-advanced:focus,\n.indicator-advanced:focus,\n.play-button-advanced:focus,\n.btn-premium-advanced:focus {\n  outline: 3px solid #00f5ff;\n  outline-offset: 3px;\n  box-shadow: 0 0 0 6px rgba(0, 245, 255, 0.3);\n}\n\n/* 减少动画（用户偏好设置） */\n@media (prefers-reduced-motion: reduce) {\n  .steam-carousel-container * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n  }\n  \n  .carousel-3d-stage {\n    transition: none !important;\n  }\n  \n  .particle {\n    animation: none !important;\n  }\n}\n\n/* 显卡规格网格 */\n.gpu-specs-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n}\n\n.spec-item {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 1rem 1.25rem;\n  background: rgba(0, 0, 0, 0.3);\n  backdrop-filter: blur(15px);\n  border: 2px solid rgba(0, 245, 255, 0.2);\n  border-radius: 1rem;\n  transition: all 0.3s ease;\n}\n\n.spec-item:hover {\n  border-color: rgba(0, 245, 255, 0.5);\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(0, 245, 255, 0.3);\n}\n\n.spec-label {\n  font-size: 0.9rem;\n  color: #94a3b8;\n  font-weight: 500;\n  flex-shrink: 0;\n}\n\n.spec-value {\n  font-size: 1rem;\n  color: #ffffff;\n  font-weight: 700;\n  text-align: right;\n  margin-left: auto;\n}\n\n/* 显卡特性 */\n.gpu-features {\n  background: rgba(0, 0, 0, 0.2);\n  border: 2px solid rgba(0, 245, 255, 0.2);\n  border-radius: 1rem;\n  padding: 1.5rem;\n}\n\n.feature-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.75rem;\n}\n\n.feature-tag {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: rgba(16, 185, 129, 0.1);\n  border: 2px solid rgba(16, 185, 129, 0.3);\n  border-radius: 2rem;\n  color: #ffffff;\n  font-size: 0.9rem;\n  font-weight: 600;\n  transition: all 0.3s ease;\n}\n\n.feature-tag:hover {\n  background: rgba(16, 185, 129, 0.2);\n  border-color: rgba(16, 185, 129, 0.5);\n  transform: translateY(-1px);\n}\n\n@media (max-width: 768px) {\n  .gpu-specs-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .spec-item {\n    padding: 0.75rem 1rem;\n    flex-direction: column;\n    text-align: center;\n    gap: 0.5rem;\n  }\n  \n  .spec-value {\n    margin-left: 0;\n    text-align: center;\n  }\n  \n  .feature-tags {\n    justify-content: center;\n  }\n}\n\n/* GPU图片容器 */\n.gpu-image-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.gpu-image-container img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  filter: brightness(1.2) contrast(1.3) saturate(1.1);\n  transform-origin: center center;\n}\n\n/* GPU Placeholder样式 */\n.gpu-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1.5rem;\n  background: linear-gradient(135deg, \n    rgba(0, 245, 255, 0.1) 0%, \n    rgba(0, 128, 255, 0.1) 50%, \n    rgba(168, 85, 247, 0.1) 100%);\n  padding: 2rem;\n  text-align: center;\n}\n\n.gpu-placeholder i {\n  font-size: 4rem;\n  color: #00f5ff;\n  text-shadow: 0 0 20px rgba(0, 245, 255, 0.8);\n  animation: gpuIconPulse 3s ease-in-out infinite;\n}\n\n.gpu-model-name {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #ffffff;\n  text-shadow: 0 0 10px rgba(0, 245, 255, 0.5);\n  letter-spacing: 0.05em;\n}\n\n/* 详情区GPU Placeholder */\n.detail-image-container {\n  width: 100%;\n  height: 100%;\n}\n\n.detail-image-container img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 0.5rem;\n}\n\n.detail-gpu-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  background: linear-gradient(135deg, \n    rgba(0, 245, 255, 0.15) 0%, \n    rgba(0, 128, 255, 0.15) 50%, \n    rgba(168, 85, 247, 0.15) 100%);\n  border-radius: 0.5rem;\n  padding: 2rem;\n  text-align: center;\n  min-height: 300px;\n}\n\n.detail-gpu-placeholder i {\n  font-size: 5rem;\n  color: #00f5ff;\n  text-shadow: 0 0 25px rgba(0, 245, 255, 1);\n  margin-bottom: 0.5rem;\n  animation: gpuIconPulse 3s ease-in-out infinite;\n}\n\n.detail-gpu-name {\n  font-size: 1.75rem;\n  font-weight: 800;\n  color: #ffffff;\n  text-shadow: 0 0 15px rgba(0, 245, 255, 0.6);\n  letter-spacing: 0.1em;\n  margin-bottom: 0.5rem;\n}\n\n.detail-gpu-model {\n  font-size: 1rem;\n  font-weight: 500;\n  color: #94a3b8;\n  text-shadow: 0 0 8px rgba(255, 255, 255, 0.3);\n  opacity: 0.9;\n}\n\n/* GPU图标动画 */\n@keyframes gpuIconPulse {\n  0%, 100% {\n    transform: scale(1);\n    filter: drop-shadow(0 0 20px rgba(0, 245, 255, 0.6));\n  }\n  50% {\n    transform: scale(1.05);\n    filter: drop-shadow(0 0 30px rgba(0, 245, 255, 1));\n  }\n}\n\n/* 响应式GPU Placeholder */\n@media (max-width: 768px) {\n  .gpu-placeholder i {\n    font-size: 3rem;\n  }\n  \n  .gpu-model-name {\n    font-size: 1rem;\n  }\n  \n  .detail-gpu-placeholder {\n    min-height: 250px;\n    padding: 1.5rem;\n  }\n  \n  .detail-gpu-placeholder i {\n    font-size: 4rem;\n  }\n  \n  .detail-gpu-name {\n    font-size: 1.5rem;\n  }\n  \n  .detail-gpu-model {\n    font-size: 0.9rem;\n  }\n}\n</style> ","<template>\n  <!-- 深色上半部分背景 -->\n  <div class=\"min-h-screen relative\">\n    <!-- 深色背景区域 -->\n    <div class=\"bg-gradient-to-br from-gray-900 via-slate-900 to-black relative overflow-hidden\">\n      <!-- 背景装饰效果 -->\n      <div class=\"fixed inset-0 pointer-events-none\">\n        <div class=\"absolute top-20 left-20 w-96 h-96 bg-gradient-to-r from-cyan-500/20 to-blue-500/20 rounded-full filter blur-3xl animate-pulse\"></div>\n        <div class=\"absolute bottom-20 right-20 w-80 h-80 bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-full filter blur-3xl animate-pulse delay-1000\"></div>\n        <div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[600px] h-[600px] bg-gradient-to-r from-indigo-500/10 to-cyan-500/10 rounded-full filter blur-3xl animate-spin-slow\"></div>\n      </div>\n\n      <!-- 专业页面头部 -->\n      <section class=\"relative z-10\">\n        <div class=\"container mx-auto px-6 py-8\">\n          <div class=\"glass-card-dark rounded-2xl p-6 border border-cyan-500/30 shadow-2xl shadow-cyan-500/20\">\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-center space-x-6\">\n                <!-- Logo -->\n                <AppLogo size=\"medium\" :show-decorations=\"false\" />\n                <div class=\"h-6 w-px bg-gray-600\"></div>\n                <NuxtLink to=\"/\" class=\"inline-flex items-center text-cyan-400 hover:text-cyan-300 transition-colors duration-200\">\n                  <i class=\"bi bi-house-door mr-2 text-lg\"></i>\n                  <span class=\"text-sm font-medium\">首页</span>\n                </NuxtLink>\n              </div>\n              <nav class=\"text-sm text-gray-400\">\n                <span>首页</span>\n                <i class=\"bi bi-chevron-right mx-2 text-cyan-400\"></i>\n                <span class=\"text-white font-medium\">产品中心</span>\n              </nav>\n            </div>\n            <div class=\"mt-6\">\n              <h1 class=\"text-4xl font-bold text-white mb-3 flex items-center gap-3\">\n                <i class=\"bi bi-grid-3x3-gap text-cyan-400 text-3xl\"></i>\n                产品中心\n            </h1>\n              <p class=\"text-gray-300 text-lg\">专业的PC硬件产品，为您的项目提供可靠的解决方案</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <!-- Steam游戏展示区 -->\n      <section class=\"relative z-10\">\n        <div class=\"container mx-auto px-6 py-6\">\n          <div class=\"glass-card-dark rounded-2xl p-8 border border-cyan-500/30 shadow-2xl shadow-cyan-500/20\">\n            <SteamCarousel />\n          </div>\n          </div>\n        </section>\n      \n      <!-- 渐变过渡区域 -->\n      <div class=\"h-40 bg-gradient-to-b from-transparent via-gray-800/20 via-gray-700/40 via-gray-600/60 to-gray-100 relative z-10\"></div>\n    </div>\n\n    <!-- 浅色下半部分背景 -->\n    <div class=\"bg-gray-100 min-h-screen relative\">\n      <!-- 粘性过滤栏 -->\n      <div class=\"sticky top-0 z-40 bg-white/95 backdrop-blur-sm shadow-lg border-b border-gray-200\">\n        <div class=\"container mx-auto px-6 py-4\">\n          <div class=\"bg-white rounded-xl p-6 shadow-lg border border-gray-200\">\n            <!-- 分类筛选按钮 -->\n            <div class=\"mb-6\">\n              <h3 class=\"text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2\">\n                <i class=\"bi bi-funnel text-blue-600\"></i>\n                产品分类\n              </h3>\n              <div class=\"flex flex-wrap gap-3\">\n                <button \n                  v-for=\"cat in categories\" \n                  :key=\"cat.id\"\n                  @click=\"setCategory(cat.id)\"\n                  :class=\"[\n                    'flex items-center px-4 py-2 rounded-lg font-medium transition-all duration-300',\n                    selectedCategory === cat.id \n                      ? 'bg-blue-600 text-white shadow-lg shadow-blue-500/30' \n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200 border border-gray-300'\n                  ]\">\n                  <i :class=\"cat.icon\" class=\"mr-2 text-lg\"></i>\n                  <span>{{ cat.name }}</span>\n                  <span class=\"ml-2 text-sm opacity-75\">({{ cat.count }})</span>\n                </button>\n              </div>\n            </div>\n\n            <!-- 快速筛选控件 -->\n            <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <!-- 品牌筛选 -->\n              <div>\n                <label class=\"block text-sm font-semibold text-gray-700 mb-2 flex items-center gap-2\">\n                  <i class=\"bi bi-bookmark text-blue-600\"></i>\n                  品牌\n                </label>\n                <select v-model=\"selectedBrand\" @change=\"fetchProducts\" \n                        class=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-800 text-sm\">\n                  <option value=\"all\">全部品牌</option>\n                  <option v-for=\"brand in brands\" :key=\"brand.id\" :value=\"brand.id\">\n                    {{ brand.name }} ({{ brand.count }})\n                  </option>\n                </select>\n              </div>\n\n              <!-- 价格区间 -->\n              <div>\n                <label class=\"block text-sm font-semibold text-gray-700 mb-2 flex items-center gap-2\">\n                  <i class=\"bi bi-currency-dollar text-blue-600\"></i>\n                  价格区间\n                </label>\n                <select v-model=\"priceRange\" @change=\"fetchProducts\"\n                        class=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-800 text-sm\">\n                  <option value=\"\">任意价格</option>\n                  <option value=\"0-3600\">3600元以下</option>\n                  <option value=\"3600-7200\">3600-7200元</option>\n                  <option value=\"7200-10800\">7200-10800元</option>\n                  <option value=\"10800-14400\">10800-14400元</option>\n                  <option value=\"14400-99999\">14400元以上</option>\n                </select>\n              </div>\n\n              <!-- 排序 -->\n              <div>\n                <label class=\"block text-sm font-semibold text-gray-700 mb-2 flex items-center gap-2\">\n                  <i class=\"bi bi-sort-down text-blue-600\"></i>\n                  排序\n                </label>\n                <select v-model=\"sortBy\" @change=\"fetchProducts\"\n                        class=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-800 text-sm\">\n                  <option value=\"\">推荐</option>\n                  <option value=\"price_asc\">价格：从低到高</option>\n                  <option value=\"price_desc\">价格：从高到低</option>\n                  <option value=\"rating\">评分最高</option>\n                  <option value=\"newest\">最新发布</option>\n                  <option value=\"popular\">最受欢迎</option>\n                </select>\n              </div>\n\n              <!-- 搜索 -->\n              <div>\n                <label class=\"block text-sm font-semibold text-gray-700 mb-2 flex items-center gap-2\">\n                  <i class=\"bi bi-search text-blue-600\"></i>\n                  搜索产品\n                </label>\n                <input \n                  v-model=\"searchTerm\" \n                  @input=\"debounceSearch\"\n                  placeholder=\"输入产品名称...\"\n                  class=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-800 text-sm placeholder-gray-500\">\n              </div>\n            </div>\n\n            <!-- 重置按钮 -->\n            <div class=\"mt-4 flex justify-end\">\n              <button @click=\"resetFilters\" \n                      class=\"px-4 py-2 text-sm font-medium text-gray-600 bg-gray-100 border border-gray-300 rounded-lg hover:bg-gray-200 hover:text-gray-800 transition-all duration-300 flex items-center gap-2\">\n                <i class=\"bi bi-arrow-clockwise\"></i>\n                重置筛选\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 主要内容区 -->\n      <main class=\"container mx-auto px-6 py-8\">\n        <!-- 工具栏 -->\n        <div class=\"bg-white rounded-xl shadow-lg border border-gray-200 mb-6\">\n          <div class=\"px-6 py-4 flex items-center justify-between border-b border-gray-200\">\n            <div class=\"flex items-center\">\n              <h2 class=\"text-xl font-semibold text-gray-800\">{{ getCategoryName(selectedCategory) }}</h2>\n              <span class=\"ml-3 text-sm text-gray-500 bg-gray-100 px-3 py-1 rounded-full\">({{ meta.total }} 个产品)</span>\n            </div>\n            <div class=\"text-sm text-gray-500\">\n              找到 {{ meta.total }} 个符合条件的产品\n            </div>\n          </div>\n          </div>\n\n          <!-- 产品网格 -->\n        <div v-if=\"!loading\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            <div v-for=\"product in products\" :key=\"product.id\" \n               class=\"bg-white rounded-xl shadow-lg border border-gray-200 hover:border-blue-300 hover:shadow-xl transition-all duration-300 group overflow-hidden\">\n              <!-- 产品图片 -->\n              <div class=\"relative h-48 bg-gradient-to-br from-gray-50 to-gray-100\">\n                <!-- 产品图片或placeholder -->\n                <div v-if=\"product.image\" class=\"product-list-image-container\">\n                  <img :src=\"product.image\" :alt=\"product.name\" \n                       class=\"w-full h-full object-contain p-4 group-hover:scale-105 transition-transform duration-300\"\n                       @error=\"$event.target.style.display = 'none'\">\n                </div>\n                <div v-else class=\"product-list-placeholder-light\">\n                  <i :class=\"getProductIcon(product.category)\"></i>\n                  <span class=\"product-category-name-light\">{{ getCategoryDisplayName(product.category) }}</span>\n                </div>\n                \n                <!-- 折扣标签 -->\n                <div v-if=\"product.originalPrice && product.originalPrice > product.price\" \n                     class=\"absolute top-3 left-3 bg-gradient-to-r from-red-500 to-pink-500 text-white px-2 py-1 rounded-full text-xs font-semibold\">\n                  -{{ Math.round((1 - product.price / product.originalPrice) * 100) }}%\n                </div>\n\n                <!-- 库存状态 -->\n                <div class=\"absolute top-3 right-3\">\n                  <span v-if=\"!product.inStock\" \n                        class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-600 border border-red-200\">\n                    <i class=\"bi bi-x-circle mr-1\"></i>缺货\n                  </span>\n                  <span v-else-if=\"product.stockCount <= 5\" \n                        class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-600 border border-orange-200\">\n                    <i class=\"bi bi-exclamation-triangle mr-1\"></i>剩余{{ product.stockCount }}\n                  </span>\n                  <span v-else \n                        class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-600 border border-green-200\">\n                    <i class=\"bi bi-check-circle mr-1\"></i>现货\n                  </span>\n                </div>\n              </div>\n\n              <!-- 产品信息 -->\n              <div class=\"p-6\">\n                <!-- 品牌和名称 -->\n                <div class=\"mb-4\">\n                <div class=\"flex items-center justify-between mb-3\">\n                  <span class=\"inline-flex items-center px-3 py-1 rounded-lg text-xs font-medium bg-blue-100 text-blue-600 border border-blue-200\">\n                      {{ product.brand }}\n                    </span>\n                </div>\n                <h3 class=\"font-semibold text-gray-800 text-lg leading-tight mb-2 line-clamp-2 group-hover:text-blue-600 transition-colors duration-200\">{{ product.name }}</h3>\n                <p class=\"text-gray-600 text-sm leading-relaxed line-clamp-2\">{{ product.description }}</p>\n                </div>\n\n                <!-- 评分 -->\n                <div class=\"flex items-center gap-2 mb-4\">\n                <div class=\"flex\">\n                  <i v-for=\"i in 5\" :key=\"i\" \n                     :class=\"i <= product.rating ? 'text-yellow-400' : 'text-gray-300'\"\n                     class=\"bi bi-star-fill text-sm\"></i>\n                </div>\n                <span class=\"text-sm font-medium text-gray-800\">{{ product.rating }}</span>\n                <span class=\"text-xs text-gray-500\">({{ product.reviewCount }})</span>\n                </div>\n\n                <!-- 核心规格 -->\n                <div class=\"space-y-2 mb-4\">\n                  <div v-for=\"(value, key) in getMainSpecs(product)\" :key=\"key\" \n                     class=\"flex justify-between items-center p-2 bg-gray-50 rounded-lg text-sm border border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">{{ translateSpecKey(key) }}</span>\n                  <span class=\"font-semibold text-gray-800\">{{ value }}</span>\n                </div>\n                </div>\n\n                <!-- 特性标签 -->\n                <div class=\"flex flex-wrap gap-2 mb-4\">\n                  <span v-for=\"feature in product.features.slice(0, 3)\" :key=\"feature\"\n                      class=\"inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-50 text-blue-600 border border-blue-100\">\n                  {{ translateFeature(feature) }}\n                  </span>\n                </div>\n\n                <!-- 价格和操作 -->\n              <div class=\"border-t border-gray-200 pt-4\">\n                  <div class=\"flex items-center justify-between mb-4\">\n                    <div>\n                    <div class=\"text-2xl font-bold text-blue-600\">\n                        ${{ product.price.toLocaleString() }}\n                      </div>\n                      <div v-if=\"product.originalPrice && product.originalPrice > product.price\" \n                         class=\"text-sm text-gray-500 line-through\">\n                        MSRP ${{ product.originalPrice.toLocaleString() }}\n                      </div>\n                    </div>\n                    <div class=\"text-right text-xs text-gray-500\">\n                      <div>发布日期</div>\n                      <div>{{ formatDate(product.releaseDate) }}</div>\n                    </div>\n                  </div>\n\n                <div class=\"grid grid-cols-2 gap-3\">\n                    <button @click=\"viewProduct(product.id)\" \n                          class=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded-lg transition-all duration-300 shadow-lg shadow-blue-500/20 hover:shadow-blue-500/40\">\n                      查看详情\n                    </button>\n                  <button class=\"px-4 py-2 border border-gray-300 hover:border-blue-400 text-gray-600 hover:text-blue-600 text-sm font-medium rounded-lg hover:bg-blue-50 transition-all duration-300 flex items-center justify-center gap-1\">\n                    <i class=\"bi bi-heart\"></i>\n                      收藏\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 加载状态 -->\n          <div v-if=\"loading\" class=\"text-center py-16\">\n          <div class=\"inline-flex flex-col items-center bg-white rounded-xl border border-gray-200 p-12 shadow-lg\">\n            <div class=\"w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mb-6\"></div>\n            <p class=\"text-xl font-medium text-gray-800\">正在加载产品...</p>\n            <p class=\"text-gray-600 mt-2\">请稍候</p>\n          </div>\n          </div>\n\n          <!-- 空状态 -->\n          <div v-if=\"!loading && products.length === 0\" class=\"text-center py-16\">\n          <div class=\"bg-white rounded-xl border border-gray-200 p-16 shadow-lg max-w-md mx-auto\">\n            <div class=\"text-8xl mb-8 text-blue-400 opacity-50\">\n              <i class=\"bi bi-inbox\"></i>\n            </div>\n            <h3 class=\"text-2xl font-semibold text-gray-800 mb-4\">未找到产品</h3>\n            <p class=\"text-gray-600 mb-8 text-lg\">请尝试调整筛选条件或搜索关键词</p>\n            <button @click=\"resetFilters\" class=\"px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-all duration-300 shadow-lg shadow-blue-500/20 hover:shadow-blue-500/40\">\n              <i class=\"bi bi-arrow-clockwise mr-2\"></i>\n                重置筛选\n              </button>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n  // 导入API\n  import { configsApi } from '~/utils/api/configs'\n  \n  // 响应式数据\n  const products = ref([])\n  const categories = ref([])\n  const brands = ref([])\n  const loading = ref(true)\n  const meta = ref({ total: 0, page: 1, limit: 12, totalPages: 1 })\n  \n  // 筛选条件\n  const selectedCategory = ref('all')\n  const selectedBrand = ref('all')\n  const priceRange = ref('')\n  const sortBy = ref('')\n  const searchTerm = ref('')\n  \n  // 防抖搜索\n  let searchTimeout = null\n  const debounceSearch = () => {\n    clearTimeout(searchTimeout)\n    searchTimeout = setTimeout(() => {\n      fetchProducts()\n    }, 500)\n  }\n  \n  // 获取产品分类\n  const fetchCategories = async () => {\n    try {\n      // 使用真实的配置分类数据\n      categories.value = [\n        { id: 'all', name: '全部产品', icon: 'bi-grid-3x3-gap', count: 0 },\n        { id: 'office', name: '办公配置', icon: 'bi-briefcase', count: 0 },\n        { id: 'gaming', name: '游戏配置', icon: 'bi-joystick', count: 0 },\n        { id: 'workstation', name: '工作站', icon: 'bi-cpu', count: 0 }\n      ]\n      \n      // 获取各分类的产品数量\n      for (const category of categories.value) {\n        if (category.id === 'all') {\n          const response = await configsApi.getConfigs({ limit: 1 })\n          category.count = response.meta?.total || 0\n        } else {\n          const response = await configsApi.getConfigs({ category: category.id, limit: 1 })\n          category.count = response.meta?.total || 0\n        }\n      }\n    } catch (error) {\n      console.error('获取分类失败:', error)\n      categories.value = [\n        { id: 'all', name: '全部产品', icon: 'bi-grid-3x3-gap', count: 0 }\n      ]\n    }\n  }\n  \n  // 获取品牌列表\n  const fetchBrands = async () => {\n    try {\n      // 从配置中获取品牌数据\n      const response = await configsApi.getConfigs({ limit: 100 })\n      if (response.success && response.data) {\n        const brandMap = new Map()\n        \n        response.data.forEach(config => {\n          if (config.brands) {\n            try {\n              const configBrands = typeof config.brands === 'string' ? JSON.parse(config.brands) : config.brands\n              if (Array.isArray(configBrands)) {\n                configBrands.forEach(brand => {\n                  brandMap.set(brand, (brandMap.get(brand) || 0) + 1)\n                })\n              }\n            } catch (e) {\n              console.error('解析品牌数据失败:', e)\n            }\n          }\n        })\n        \n        brands.value = Array.from(brandMap.entries()).map(([name, count]) => ({\n          id: name,\n          name,\n          count\n        }))\n      } else {\n        brands.value = []\n      }\n    } catch (error) {\n      console.error('获取品牌失败:', error)\n      brands.value = []\n    }\n  }\n  \n  // 获取产品列表\n  const fetchProducts = async () => {\n    loading.value = true\n    try {\n      const params = {\n        page: meta.value.page,\n        limit: meta.value.limit\n      }\n      \n      // 添加筛选条件\n      if (selectedCategory.value && selectedCategory.value !== 'all') {\n        params.category = selectedCategory.value\n      }\n      \n      if (priceRange.value) {\n        const [min, max] = priceRange.value.split('-').map(Number)\n        params.min_price = min\n        params.max_price = max\n      }\n      \n      if (sortBy.value) {\n        params.sort = sortBy.value\n      }\n      \n      if (searchTerm.value.trim()) {\n        params.search = searchTerm.value.trim()\n      }\n      \n      const response = await configsApi.getConfigs(params)\n      \n      if (response.success) {\n        products.value = response.data.map(config => ({\n          id: config.id,\n          name: config.name,\n          category: config.category,\n          brand: getBrandFromConfig(config),\n          price: config.price,\n          originalPrice: config.original_price,\n          rating: 4.5, // 默认评分\n          reviewCount: 50, // 默认评论数\n          image: config.images && config.images.length > 0 ? config.images[0] : '',\n          releaseDate: config.created_at,\n          inStock: config.stock > 0,\n          stockCount: config.stock,\n          specs: config.specs ? (typeof config.specs === 'string' ? JSON.parse(config.specs) : config.specs) : {},\n          features: config.features ? (typeof config.features === 'string' ? JSON.parse(config.features) : config.features) : [],\n          description: config.description || '专业电脑配置'\n        }))\n        \n        meta.value = response.meta || { total: 0, page: 1, limit: 12, totalPages: 1 }\n      } else {\n        products.value = []\n        meta.value = { total: 0, page: 1, limit: 12, totalPages: 1 }\n      }\n    } catch (error) {\n      console.error('获取产品列表失败:', error)\n      products.value = []\n      meta.value = { total: 0, page: 1, limit: 12, totalPages: 1 }\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 辅助函数：从配置中提取品牌\n  const getBrandFromConfig = (config) => {\n    if (config.brands) {\n      try {\n        const brands = typeof config.brands === 'string' ? JSON.parse(config.brands) : config.brands\n        return Array.isArray(brands) && brands.length > 0 ? brands[0] : '未知品牌'\n      } catch (e) {\n        return '未知品牌'\n      }\n    }\n    return '未知品牌'\n  }\n  \n  // 页面初始化\n  onMounted(async () => {\n    loading.value = true\n    try {\n      await Promise.all([\n        fetchCategories(),\n        fetchBrands(),\n        fetchProducts()\n      ])\n    } catch (error) {\n      console.error('页面初始化失败:', error)\n    } finally {\n      loading.value = false\n    }\n  })\n  \n  // 设置分类\n  const setCategory = (categoryId) => {\n    selectedCategory.value = categoryId\n    selectedBrand.value = 'all'\n    fetchProducts()\n  }\n  \n  // 获取分类名称\n  const getCategoryName = (categoryId) => {\n    const category = categories.value.find(cat => cat.id === categoryId)\n    return category?.name || 'All Products'\n  }\n  \n  // 获取主要规格\n  const getMainSpecs = (product) => {\n    const specs = product.specs || {}\n    return Object.entries(specs).slice(0, 2).reduce((obj, [key, value]) => {\n      obj[key] = value\n      return obj\n    }, {})\n  }\n\n// 翻译规格键名\nconst translateSpecKey = (key) => {\n  const translations = {\n    memory: '显存',\n    power: '功耗',\n    cores: '核心',\n    threads: '线程',\n    socket: '插槽',\n    chipset: '芯片组',\n    wattage: '功率',\n    efficiency: '效率',\n    size: '尺寸',\n    resolution: '分辨率'\n  }\n  return translations[key] || key\n}\n\n// 翻译特性\nconst translateFeature = (feature) => {\n  const translations = {\n    '光线追踪': 'Ray Tracing',\n    'DLSS 3.0': 'DLSS 3.0',\n    'RDNA 3': 'RDNA 3',\n    'FSR 3.0': 'FSR 3.0',\n    '超线程': 'Hyper-Threading',\n    'DDR5支持': 'DDR5 Support',\n    'PCIe 5.0': 'PCIe 5.0',\n    'WiFi 6E': 'WiFi 6E',\n    '80+ 金牌': '80+ Gold',\n    '全模组': 'Fully Modular',\n    '4K UHD': '4K UHD',\n    '144Hz': '144Hz',\n    'HDR10': 'HDR10'\n  }\n  return translations[feature] || feature\n}\n\n// 获取产品图标\nconst getProductIcon = (category) => {\n  const icons = {\n    graphics: 'bi bi-gpu-card text-cyan-400',\n    cpu: 'bi bi-cpu text-orange-400', \n    motherboard: 'bi bi-motherboard text-green-400',\n    power: 'bi bi-lightning text-yellow-400',\n    monitor: 'bi bi-display text-purple-400'\n  }\n  return icons[category] || 'bi bi-pc-display text-gray-400'\n}\n\n// 获取类别显示名称\nconst getCategoryDisplayName = (category) => {\n  const names = {\n    graphics: '显卡',\n    cpu: '处理器',\n    motherboard: '主板', \n    power: '电源',\n    monitor: '显示器'\n  }\n  return names[category] || '硬件'\n}\n  \n  // 格式化日期\n  const formatDate = (dateString) => {\n    const date = new Date(dateString)\n    return date.toLocaleDateString('zh-CN', { year: 'numeric', month: '2-digit', day: '2-digit' })\n  }\n  \n// 处理图片错误\n  const handleImageError = (event) => {\n    event.target.src = 'https://via.placeholder.com/400x300?text=暂无图片'\n  }\n  \n  // 查看产品详情\n  const viewProduct = async (id) => {\n    console.log('Attempting to navigate to product:', id)\n    try {\n      // 使用 Nuxt 3 的 navigateTo 函数，明确指定为客户端导航\n      await navigateTo(`/products/${id}`, { external: false })\n      console.log('Navigation successful to:', `/products/${id}`)\n    } catch (error) {\n      console.error('NavigateTo failed, trying router.push:', error)\n      try {\n        // 备用方案：使用 Vue Router\n        const router = useRouter()\n        await router.push(`/products/${id}`)\n        console.log('Router.push successful to:', `/products/${id}`)\n      } catch (routerError) {\n        console.error('Router.push also failed:', routerError)\n        // 最后备用方案：直接使用 window.location\n        window.location.href = `/products/${id}`\n      }\n    }\n  }\n  \n  // 重置筛选\n  const resetFilters = () => {\n    selectedCategory.value = 'all'\n    selectedBrand.value = 'all'\n    priceRange.value = ''\n    sortBy.value = ''\n    searchTerm.value = ''\n    fetchProducts()\n  }\n\n  // 页面元数据\n  useHead({\n    title: '产品中心 - xlCig',\n    meta: [\n      { name: 'description', content: '浏览我们精选的PC硬件产品，包括显卡、CPU、主板等' }\n    ]\n  })\n  </script>\n\n<style scoped>\n/* 产品列表图片容器 */\n.product-list-image-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 深色主题产品列表Placeholder样式 */\n.product-list-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  background: linear-gradient(135deg, \n    rgba(0, 245, 255, 0.05) 0%, \n    rgba(0, 128, 255, 0.05) 50%, \n    rgba(168, 85, 247, 0.05) 100%);\n  padding: 1.5rem;\n  text-align: center;\n}\n\n.product-list-placeholder i {\n  font-size: 3rem;\n  text-shadow: 0 0 15px currentColor;\n  animation: productIconFloat 3s ease-in-out infinite;\n}\n\n.product-category-name {\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #ffffff;\n  text-shadow: 0 0 8px rgba(255, 255, 255, 0.3);\n  letter-spacing: 0.05em;\n  opacity: 0.9;\n}\n\n/* 浅色主题产品列表Placeholder样式 */\n.product-list-placeholder-light {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  background: linear-gradient(135deg, \n    rgba(59, 130, 246, 0.08) 0%, \n    rgba(147, 51, 234, 0.08) 50%, \n    rgba(16, 185, 129, 0.08) 100%);\n  padding: 1.5rem;\n  text-align: center;\n}\n\n.product-list-placeholder-light i {\n  font-size: 3rem;\n  text-shadow: 0 0 15px currentColor;\n  animation: productIconFloatLight 3s ease-in-out infinite;\n}\n\n.product-category-name-light {\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #374151;\n  text-shadow: 0 0 8px rgba(55, 65, 81, 0.3);\n  letter-spacing: 0.05em;\n  opacity: 0.9;\n}\n\n/* 产品图标动画 */\n@keyframes productIconFloat {\n  0%, 100% {\n    transform: translateY(0) scale(1);\n    filter: drop-shadow(0 0 15px currentColor);\n  }\n  50% {\n    transform: translateY(-5px) scale(1.05);\n    filter: drop-shadow(0 0 20px currentColor);\n  }\n}\n\n/* 浅色主题产品图标动画 */\n@keyframes productIconFloatLight {\n  0%, 100% {\n    transform: translateY(0) scale(1);\n    filter: drop-shadow(0 0 10px currentColor);\n  }\n  50% {\n    transform: translateY(-5px) scale(1.05);\n    filter: drop-shadow(0 0 15px currentColor);\n  }\n}\n\n/* 粘性定位优化 */\n.sticky {\n  position: -webkit-sticky;\n  position: sticky;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .product-list-placeholder i,\n  .product-list-placeholder-light i {\n    font-size: 2.5rem;\n  }\n  \n  .product-category-name,\n  .product-category-name-light {\n    font-size: 0.8rem;\n  }\n}\n</style> "],"version":3}